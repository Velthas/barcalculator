(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>d});var r=t(537),a=t.n(r),o=t(645),c=t.n(o),i=t(667),A=t.n(i),s=new URL(t(138),t.b),l=c()(a()),u=A()(s);l.push([n.id,"* {\n    box-sizing: border-box;\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    background-color: #000;\n}\n\n#navbar {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 10vh;\n    color: #fff;\n}\n\n#navbar h1 {\n    margin-top: 30px;\n}\n\n#navbar h1,\n#navbar h3 {\n    letter-spacing: 5px;\n    font-weight: bold;\n    font-family: 'Oswald', sans-serif;\n}\n\n#gradient {\n    background-image: linear-gradient(to bottom, transparent 0%, black 100%);\n    height: 50vh;\n}\n\n#header {\n    background: url("+u+") center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 50vh;\n\n}\n\n#main {\n    color: white;\n    background-color: #000;\n    display:flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 25px;\n}\n.container {\n    display: flex; \n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n}\n\n.container,\n#rooms h4 {\n    color: #adadad;\n    font-family: 'Oswald', sans-serif;\n}\n\n#rooms h4 {\n    text-align: center;\n    margin-bottom: 8px;\n}\n\n\nlabel {\n    font-size: large;\n}\n\ninput#classic-pop,\ninput#triple-pop,\ninput#quadruple-pop {\n    height: 35px;\n    width: 55px;\n    border: none;\n    border-radius: 20px;\n    font-size: large;\n    background-color: aliceblue;\n    text-align: center;\n}\n\ninput#classic-pop:focus-visible,\ninput#triple-pop:focus-visible,\ninput#quadruple-pop:focus-visible,\ninput#start:focus-visible {\n    outline: 4px solid #930707;\n}\n\ninput#start {\n    height: 45px;\n    width: 150px;\n    font-size: large;\n    font-family: 'Oswald', Georgia, serif;\n    background-color: aliceblue;\n}\n\ntable#table {\n    border-collapse: collapse;\n    font: large;\n}\n\ntd, th {\n    border: 1px solid #ddd;\n    padding: 10px;\n}\n\nth {\n    background-color: #930707;\n}\n\ntr:nth-child(odd){\n    background-color: #fdfdfd;\n}\n\ntr:nth-child(even){\n    background-color: #f2f2f2;\n}\n\ntr:hover {\n    background-color: #ddd;\n}\n\ntfoot,\ntbody {\n    color: black;\n}\n\n.delete {\n        background-color: black;\n        border: none;\n        display: flex;\n        justify-content: flex-end;\n}\n\n.delete img {\n    width: 35px;\n    height: 35px;\n    cursor: pointer;\n}\n\n.muda {\n    background-color: #000;\n    border: none;\n}\n\nbutton:active {\n    transform: translateY(5px);\n}\n\nbutton:hover {\n    background-color: #c4dff7;\n}\n\nbutton#ratecalc,\nbutton#dorder {\n    font-family: 'Oswald', sans-serif;\n    background-color: aliceblue;\n    border: none;\n    transition: transform 0.3s ease-in;\n}\n\nbutton#ratecalc {\n    height: 45px;\n    width: 150px;\n    font-size: 18px;\n    padding: 10px;\n}\n\nbutton#dorder {\n    font-size: 13px;\n    padding: 8px;\n}\n\n#footer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 15vh;\n    font-size: large\n}\n\na {\n    text-decoration: none;\n    color: #930707;\n}\n\na:hover {\n    color: #700505\n}\n\n.error {\n    background-color: lightcoral;\n    border: 1px solid darkred;\n    font-size: 14px;\n    font-family: 'Georgia', sans-serif;\n    padding: 10px;\n    color: darkred;\n    border-radius: 5px;\n    width: 40vw;\n    text-align:center;\n}\n\n@media screen and (max-width: 700px) {\n    table#table {\n        width: 90vw;\n        font-size: small;\n    }\n\n    .error {\n        width: 70vw;\n    }\n}\n\n@media screen and (max-width: 390px) {\n    h1 {\n        font-size: 1.25rem;\n    }\n\n    h3 {\n        font-size: 1.15rem;\n    }\n\n    input#hotelpop,\n    label,\n    #ratecalc\n    {\n        font-size: 1rem;\n    }\n\n    #ratecalc,\n    input#start {\n        width: 125px;\n        height: 35px;\n    }\n\n    input#start {\n        font-size: small;\n    }\n\n\n    table#table {\n        width: 80vw;\n        font-size: smaller;\n    }\n\n    .error {\n        width: 70vw;\n    }\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,gBAAgB;AACpB;;AAEA;;IAEI,mBAAmB;IACnB,iBAAiB;IACjB,iCAAiC;AACrC;;AAEA;IACI,wEAAwE;IACxE,YAAY;AAChB;;AAEA;IACI,0DAAkD;IAClD,4BAA4B;IAC5B,sBAAsB;IACtB,YAAY;;AAEhB;;AAEA;IACI,YAAY;IACZ,sBAAsB;IACtB,YAAY;IACZ,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,QAAQ;AACZ;;AAEA;;IAEI,cAAc;IACd,iCAAiC;AACrC;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;AACtB;;;AAGA;IACI,gBAAgB;AACpB;;AAEA;;;IAGI,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,mBAAmB;IACnB,gBAAgB;IAChB,2BAA2B;IAC3B,kBAAkB;AACtB;;AAEA;;;;IAII,0BAA0B;AAC9B;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,gBAAgB;IAChB,qCAAqC;IACrC,2BAA2B;AAC/B;;AAEA;IACI,yBAAyB;IACzB,WAAW;AACf;;AAEA;IACI,sBAAsB;IACtB,aAAa;AACjB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;;IAEI,YAAY;AAChB;;AAEA;QACQ,uBAAuB;QACvB,YAAY;QACZ,aAAa;QACb,yBAAyB;AACjC;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;;IAEI,iCAAiC;IACjC,2BAA2B;IAC3B,YAAY;IACZ,kCAAkC;AACtC;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,aAAa;AACjB;;AAEA;IACI,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ;AACJ;;AAEA;IACI,qBAAqB;IACrB,cAAc;AAClB;;AAEA;IACI;AACJ;;AAEA;IACI,4BAA4B;IAC5B,yBAAyB;IACzB,eAAe;IACf,kCAAkC;IAClC,aAAa;IACb,cAAc;IACd,kBAAkB;IAClB,WAAW;IACX,iBAAiB;AACrB;;AAEA;IACI;QACI,WAAW;QACX,gBAAgB;IACpB;;IAEA;QACI,WAAW;IACf;AACJ;;AAEA;IACI;QACI,kBAAkB;IACtB;;IAEA;QACI,kBAAkB;IACtB;;IAEA;;;;QAII,eAAe;IACnB;;IAEA;;QAEI,YAAY;QACZ,YAAY;IAChB;;IAEA;QACI,gBAAgB;IACpB;;;IAGA;QACI,WAAW;QACX,kBAAkB;IACtB;;IAEA;QACI,WAAW;IACf;AACJ",sourcesContent:["* {\n    box-sizing: border-box;\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    background-color: #000;\n}\n\n#navbar {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 10vh;\n    color: #fff;\n}\n\n#navbar h1 {\n    margin-top: 30px;\n}\n\n#navbar h1,\n#navbar h3 {\n    letter-spacing: 5px;\n    font-weight: bold;\n    font-family: 'Oswald', sans-serif;\n}\n\n#gradient {\n    background-image: linear-gradient(to bottom, transparent 0%, black 100%);\n    height: 50vh;\n}\n\n#header {\n    background: url(./images/villacarlotta.jpg) center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 50vh;\n\n}\n\n#main {\n    color: white;\n    background-color: #000;\n    display:flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 25px;\n}\n.container {\n    display: flex; \n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n}\n\n.container,\n#rooms h4 {\n    color: #adadad;\n    font-family: 'Oswald', sans-serif;\n}\n\n#rooms h4 {\n    text-align: center;\n    margin-bottom: 8px;\n}\n\n\nlabel {\n    font-size: large;\n}\n\ninput#classic-pop,\ninput#triple-pop,\ninput#quadruple-pop {\n    height: 35px;\n    width: 55px;\n    border: none;\n    border-radius: 20px;\n    font-size: large;\n    background-color: aliceblue;\n    text-align: center;\n}\n\ninput#classic-pop:focus-visible,\ninput#triple-pop:focus-visible,\ninput#quadruple-pop:focus-visible,\ninput#start:focus-visible {\n    outline: 4px solid #930707;\n}\n\ninput#start {\n    height: 45px;\n    width: 150px;\n    font-size: large;\n    font-family: 'Oswald', Georgia, serif;\n    background-color: aliceblue;\n}\n\ntable#table {\n    border-collapse: collapse;\n    font: large;\n}\n\ntd, th {\n    border: 1px solid #ddd;\n    padding: 10px;\n}\n\nth {\n    background-color: #930707;\n}\n\ntr:nth-child(odd){\n    background-color: #fdfdfd;\n}\n\ntr:nth-child(even){\n    background-color: #f2f2f2;\n}\n\ntr:hover {\n    background-color: #ddd;\n}\n\ntfoot,\ntbody {\n    color: black;\n}\n\n.delete {\n        background-color: black;\n        border: none;\n        display: flex;\n        justify-content: flex-end;\n}\n\n.delete img {\n    width: 35px;\n    height: 35px;\n    cursor: pointer;\n}\n\n.muda {\n    background-color: #000;\n    border: none;\n}\n\nbutton:active {\n    transform: translateY(5px);\n}\n\nbutton:hover {\n    background-color: #c4dff7;\n}\n\nbutton#ratecalc,\nbutton#dorder {\n    font-family: 'Oswald', sans-serif;\n    background-color: aliceblue;\n    border: none;\n    transition: transform 0.3s ease-in;\n}\n\nbutton#ratecalc {\n    height: 45px;\n    width: 150px;\n    font-size: 18px;\n    padding: 10px;\n}\n\nbutton#dorder {\n    font-size: 13px;\n    padding: 8px;\n}\n\n#footer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 15vh;\n    font-size: large\n}\n\na {\n    text-decoration: none;\n    color: #930707;\n}\n\na:hover {\n    color: #700505\n}\n\n.error {\n    background-color: lightcoral;\n    border: 1px solid darkred;\n    font-size: 14px;\n    font-family: 'Georgia', sans-serif;\n    padding: 10px;\n    color: darkred;\n    border-radius: 5px;\n    width: 40vw;\n    text-align:center;\n}\n\n@media screen and (max-width: 700px) {\n    table#table {\n        width: 90vw;\n        font-size: small;\n    }\n\n    .error {\n        width: 70vw;\n    }\n}\n\n@media screen and (max-width: 390px) {\n    h1 {\n        font-size: 1.25rem;\n    }\n\n    h3 {\n        font-size: 1.15rem;\n    }\n\n    input#hotelpop,\n    label,\n    #ratecalc\n    {\n        font-size: 1rem;\n    }\n\n    #ratecalc,\n    input#start {\n        width: 125px;\n        height: 35px;\n    }\n\n    input#start {\n        font-size: small;\n    }\n\n\n    table#table {\n        width: 80vw;\n        font-size: smaller;\n    }\n\n    .error {\n        width: 70vw;\n    }\n}"],sourceRoot:""}]);const d=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var c={};if(r)for(var i=0;i<this.length;i++){var A=this[i][0];null!=A&&(c[A]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);r&&c[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),c=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(c).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},c=[],i=0;i<n.length;i++){var A=n[i],s=r.base?A[0]+r.base:A[0],l=o[s]||0,u="".concat(s," ").concat(l);o[s]=l+1;var d=t(u),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==d)e[d].references++,e[d].updater(p);else{var f=a(p,r);r.byIndex=i,e.splice(i,0,{identifier:u,updater:f,references:1})}c.push(u)}return c}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var c=0;c<o.length;c++){var i=t(o[c]);e[i].references--}for(var A=r(n,a),s=0;s<o.length;s++){var l=t(o[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},138:(n,e,t)=>{n.exports=t.p+"95d3742b76e427335f86.jpg"},502:(n,e,t)=>{n.exports=t.p+"442dd2da3a88960835c1.png"}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{var n=t(379),e=t.n(n),r=t(795),a=t.n(r),o=t(569),c=t.n(o),i=t(565),A=t.n(i),s=t(216),l=t.n(s),u=t(589),d=t.n(u),p=t(426),f={};f.styleTagTransform=d(),f.setAttributes=A(),f.insert=c().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=l(),e()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;var b=t(502);const C=function(){function n(n,e,t){const r=document.querySelectorAll(n),a=document.querySelector(e),o=document.querySelector(t);a.textContent="0.00 EUR",o.textContent="0.00 EUR",r.forEach((n=>{let e=Number(n.textContent.split(" ")[0]),t=Number(a.textContent.split(" ")[0]);t=(t+e).toFixed(2);let c=(t/r.length).toFixed(2);0===r.length?o.textContent="0.00 EUR":o.textContent=c+" EUR",a.textContent=`${t} EUR`}))}function e(n){const e=document.createElement("div");e.classList.add("error");const t=document.querySelector("#main"),r=t.querySelector("#table");e.textContent=n,t.insertBefore(e,r)}return{returnDate:function(){return document.querySelector("#start").value},returnRoomsSold:function(n){const e=document.querySelector(".container#room-field");switch(!0){case"Classic"===n:return e.querySelector("#classic-pop").value;case"JST"===n:return e.querySelector("#triple-pop").value;case"JSQ"===n:return e.querySelector("#quadruple-pop").value;case"All"===n:return Number(e.querySelector("#quadruple-pop").value+e.querySelector("#triple-pop").value+e.querySelector("#classic-pop").value)}},returnRoomType:function(){const n=document.getElementById("rooms"),e=n.querySelector("#mus"),t=n.querySelector("#m"),r=n.querySelector("#jst"),a=n.querySelector("#jsq"),o=n.querySelector("#suite");switch(!0){case e.checked:return 0;case t.checked:return 1;case r.checked:return 2;case a.checked:return 3;case o.checked:return 4}},createNewTableRecord:function(e,t,r,a,o){const c=document.querySelector("#info").insertRow(),i=c.insertCell(),A=new Image;A.src=b,i.classList.add("delete"),i.appendChild(A),A.addEventListener("click",(()=>{c.remove(),n(".price","#total","#average"),n(".ebprice","#ebtotal","#ebavg"),n(".lmprice","#lmtotal","#lmavg")})),c.insertCell().textContent=o,c.insertCell().textContent=e,c.insertCell().textContent=t,c.insertCell().textContent=r;const s=c.insertCell();s.setAttribute("class","price"),s.textContent=a,function(n,e){const t=Number(n.split(".")[0]);let r,a;"JSQ"===e.cells[2].textContent?(r=.15*(t-30),a=.1*(t-30)):"JST"===e.cells[2].textContent?(r=.15*(t-15),a=.1*(t-15)):(r=.15*t,a=.1*t);let o=(t-r).toFixed(2),c=(t-a).toFixed(2);const i=e.insertCell();i.classList.add("ebprice"),i.textContent=`${o} EUR`;const A=e.insertCell();A.classList.add("lmprice"),A.textContent=`${c} EUR`}(a,c)},updateTotal:n,checkForErrors:function(){const n=document.querySelector("#start"),t=document.querySelector("#classic-pop");return""===n.value&&""===t.value?(e("Per calcolare la tariffa bisogna specificare il numero di camere vendute e la data!"),1):NaN===isNaN(Number(t.value))||t.value>25?(e("Il numero delle stanze deve essere inserito in formato numerico e non può eccedere le 25 unità (l'hotel ha solo 25 stanze)"),1):""===n.value?(e("Non dimenticare di inserire la data per la quale calcolare la tariffa!"),1):""===t.value?(e("Non dimenticare di inserire il numero di camere vendute per calcolare la BAR!"),1):0},deleteErrorDiv:function(){const n=document.querySelector(".error");null!==n&&n.remove()},orderByDate:function(){const n=document.querySelector("tbody"),e=Array.from(n.querySelectorAll("tr"));if(e.length<2)return;const t=e.sort((function(n,e){return new Date(n.cells[1].textContent)<new Date(e.cells[1].textContent)?-1:new Date(n.cells[1].textContent)>new Date(e.cells[1].textContent)?1:0}));e.forEach((n=>n.remove())),t.forEach((e=>n.appendChild(e)))}}}(),m=function(n){let e;switch(!0){case new Date(n)<=new Date("2022-03-07")&&new Date(n)>=new Date("2022-01-03")||new Date(n)<=new Date("2022-12-22")&&new Date(n)>=new Date("2022-10-26"):e=0;break;case new Date(n)<=new Date("2022-04-11")&&new Date(n)>=new Date("2022-03-08")||new Date(n)<=new Date("2022-07-04")&&new Date(n)>=new Date("2022-06-10")||new Date(n)<=new Date("2022-10-25")&&new Date(n)>=new Date("2022-09-30")||new Date(n)<=new Date("2022-12-29")&&new Date(n)>=new Date("2022-12-23"):e=1;break;case new Date(n)<=new Date("2022-04-25")&&new Date(n)>=new Date("2022-04-12")||new Date(n)<=new Date("2022-06-09")&&new Date(n)>=new Date("2022-05-27")||new Date(n)<=new Date("2022-07-18")&&new Date(n)>=new Date("2022-07-05")||new Date(n)<=new Date("2022-09-29")&&new Date(n)>=new Date("2022-09-16"):e=2;break;case new Date(n)<=new Date("2022-05-26")&&new Date(n)>=new Date("2022-04-26")||new Date(n)<=new Date("2022-08-08")&&new Date(n)>=new Date("2022-07-19")||new Date(n)<=new Date("2022-09-15")&&new Date(n)>=new Date("2022-08-19"):e=3;break;case new Date(n)<=new Date("2022-08-18")&&new Date(n)>=new Date("2022-08-09")||new Date(n)<=new Date("2023-01-02")&&new Date(n)>=new Date("2022-12-30")||new Date(n)<=new Date("2022-01-02")&&new Date(n)>=new Date("2021-12-30"):e=4}return e},h={seasonAndBar:[[[73,88,120,140,210],[76,93,130,150,220],[80,96,130,150,230],[85,105,145,165,240],[90,115,145,165,270],[95,125,160,180,300],[105,140,160,180,340]],[[77,93,125,145,230],[80,96,135,155,240],[83,105,135,155,250],[86,110,155,175,270],[98,120,155,175,300],[105,130,175,195,320],[115,155,175,195,370]],[[82,100,127,147,240],[87,105,135,160,250],[93,110,135,160,260],[98,115,160,180,280],[105,125,160,180,310],[110,135,185,205,340],[120,165,185,205,390]],[[92,107,130,150,260],[95,115,140,165,270],[100,120,140,165,280],[105,135,175,195,300],[115,145,175,195,340],[120,155,200,220,370],[130,175,200,220,410]],[[100,135,155,175,310],[105,140,170,190,320],[110,145,170,190,330],[115,150,190,210,340],[125,165,190,210,390],[130,175,215,240,410],[145,190,215,240,450]]]},g=function(){function n(n){const e=Number(C.returnRoomsSold("Classic")),t=C.returnDate(),r=m(t),a=n;let o;switch(!0){case e<6:o=0;break;case e<9:o=1;break;case e<12:o=2;break;case e<14:o=3;break;case 14===e:o=4;break;case 15===e:o=5;break;case 16===e:o=6}return{season:r,bar:o,room:a,rate:h.seasonAndBar[r][o][a],date:t}}function e(){const e=Number(C.returnRoomsSold("JST")),t=C.returnDate(),r=m(t);let a;switch(!0){case 0===e:a=0;break;case 1===e:a=1;break;case 2===e:a=3;break;case e>2:a=5}let o=h.seasonAndBar[r][a][2],c=n(1).rate;for(;o-15<=c;)a+=1,o=h.seasonAndBar[r][a][2];return{season:r,bar:a,room:2,rate:o,date:t}}return{makeItHuman:function(n,e,t,r,a){let o={};switch(!0){case 0===n:o.season="Low Season";break;case 1===n:o.season="Middle Season";break;case 2===n:o.season="Middle-high Season";break;case 3===n:o.season="High Season";break;case 4===n:o.season="Peak Season"}switch(o.bar=6===e?"RACK":-(e-6),!0){case 0===t:o.room="MUS";break;case 1===t:o.room="M/XX";break;case 2===t:o.room="JST";break;case 3===t:o.room="JSQ";break;case 4===t:o.room="SUITE"}return o.fare=`${r}.00 EUR`,o.date=a,o},calculateClassicsFare:n,calculateQuadrupleFare:function(){const n=Number(C.returnRoomsSold("JSQ")),t=C.returnDate(),r=m(t);let a;switch(!0){case 0===n:a=0;break;case 1===n:a=1;break;case 2===n:a=3;case 3===n:a=5}let o=h.seasonAndBar[r][a][3];const c=e().rate;for(;o-30<c-15;)a+=1,o=h.seasonAndBar[r][a][3];return{season:r,bar:a,room:3,rate:o,date:t}},calculateTripleFare:e,calculateSuiteFare:function(){const n=C.returnRoomsSold("All"),e=C.returnDate(),t=m(e);let r;switch(!0){case n<6:r=0;break;case n<9:r=1;break;case n<12:r=2;break;case n<14:r=3;break;case 14===n:r=4;break;case 15===n:r=5;break;case n>=16:r=6}return{season:t,bar:r,room:4,date:e,rate:h.seasonAndBar[t][r][4]}}}}(),B=g;document.querySelector("#ratecalc").addEventListener("click",(function(){if(C.deleteErrorDiv(),1===C.checkForErrors())return;let n,e=C.returnRoomType();switch(!0){case 0===e:n=B.calculateClassicsFare(0);break;case 1===e:n=B.calculateClassicsFare(1);break;case 2===e:n=B.calculateTripleFare();break;case 3===e:n=B.calculateQuadrupleFare();break;case 4===e:n=B.calculateSuiteFare()}const t=B.makeItHuman(n.season,n.bar,n.room,n.rate,n.date);C.createNewTableRecord(t.room,t.bar,t.season,t.fare,t.date),C.updateTotal(".price","#total","#average"),C.updateTotal(".ebprice","#ebtotal","#ebavg"),C.updateTotal(".lmprice","#lmtotal","#lmavg")})),document.querySelector("#dorder").addEventListener("click",C.orderByDate)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,