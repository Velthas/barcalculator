(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>d});var r=t(537),a=t.n(r),o=t(645),c=t.n(o),s=t(667),i=t.n(s),l=new URL(t(138),t.b),A=c()(a()),u=i()(l);A.push([e.id,"* {\n  box-sizing: border-box;\n  padding: 0px;\n  margin: 0px;\n}\n\nbody {\n  background-color: #000;\n}\n\n#navbar {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 10vh;\n  color: #fff;\n}\n\n#navbar h1 {\n  margin-top: 30px;\n}\n\n#navbar h1,\n#navbar h3 {\n  letter-spacing: 5px;\n  font-weight: bold;\n  font-family: 'Oswald', sans-serif;\n}\n\n#gradient {\n  background-image: linear-gradient(to bottom, transparent 0%, black 100%);\n  height: 50vh;\n}\n\n#header {\n  background: url("+u+") center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 50vh;\n}\n\n#main {\n  color: white;\n  background-color: #000;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 25px;\n}\n.container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n}\n\n.container,\n#rooms h4 {\n  color: #adadad;\n  font-family: 'Oswald', sans-serif;\n}\n\n#rooms h4 {\n  text-align: center;\n  margin-bottom: 8px;\n}\n\nlabel {\n  font-size: large;\n}\n\ninput#classic-pop,\ninput#triple-pop,\ninput#quadruple-pop {\n  height: 35px;\n  width: 55px;\n  border: none;\n  border-radius: 20px;\n  font-size: large;\n  background-color: aliceblue;\n  text-align: center;\n}\n\ninput#classic-pop:focus-visible,\ninput#triple-pop:focus-visible,\ninput#quadruple-pop:focus-visible,\ninput#start:focus-visible {\n  outline: 4px solid #930707;\n}\n\ninput#start {\n  height: 45px;\n  width: 150px;\n  font-size: large;\n  font-family: 'Oswald', Georgia, serif;\n  background-color: aliceblue;\n}\n\ntable#table {\n  border-collapse: collapse;\n  font: large;\n}\n\ntd,\nth {\n  border: 1px solid #ddd;\n  padding: 10px;\n}\n\nth {\n  background-color: #930707;\n}\n\ntr:nth-child(odd) {\n  background-color: #fdfdfd;\n}\n\ntr:nth-child(even) {\n  background-color: #f2f2f2;\n}\n\ntr:hover {\n  background-color: #ddd;\n}\n\ntfoot,\ntbody {\n  color: black;\n}\n\n.delete {\n  background-color: black;\n  border: none;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.delete img {\n  width: 35px;\n  height: 35px;\n  cursor: pointer;\n}\n\n.muda {\n  background-color: #000;\n  border: none;\n}\n\nbutton:active {\n  transform: translateY(5px);\n}\n\nbutton:hover {\n  background-color: #c4dff7;\n}\n\nbutton#ratecalc,\nbutton#dorder {\n  font-family: 'Oswald', sans-serif;\n  background-color: aliceblue;\n  border: none;\n  transition: transform 0.3s ease-in;\n}\n\nbutton#ratecalc {\n  height: 45px;\n  width: 150px;\n  font-size: 18px;\n  padding: 10px;\n}\n\nbutton#dorder {\n  font-size: 13px;\n  padding: 8px;\n}\n\n#footer {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 15vh;\n  font-size: large;\n}\n\na {\n  text-decoration: none;\n  color: #930707;\n}\n\na:hover {\n  color: #700505;\n}\n\n.error {\n  background-color: lightcoral;\n  border: 1px solid darkred;\n  font-size: 14px;\n  font-family: 'Georgia', sans-serif;\n  padding: 10px;\n  color: darkred;\n  border-radius: 5px;\n  width: 40vw;\n  text-align: center;\n}\n\n@media screen and (max-width: 700px) {\n  table#table {\n    width: 90vw;\n    font-size: small;\n  }\n\n  .error {\n    width: 70vw;\n  }\n}\n\n@media screen and (max-width: 390px) {\n  h1 {\n    font-size: 1.25rem;\n  }\n\n  h3 {\n    font-size: 1.15rem;\n  }\n\n  input#hotelpop,\n  label,\n  #ratecalc {\n    font-size: 1rem;\n  }\n\n  #ratecalc,\n  input#start {\n    width: 125px;\n    height: 35px;\n  }\n\n  input#start {\n    font-size: small;\n  }\n\n  table#table {\n    width: 80vw;\n    font-size: smaller;\n  }\n\n  .error {\n    width: 70vw;\n  }\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,sBAAsB;EACtB,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;EAEE,mBAAmB;EACnB,iBAAiB;EACjB,iCAAiC;AACnC;;AAEA;EACE,wEAAwE;EACxE,YAAY;AACd;;AAEA;EACE,0DAAkD;EAClD,4BAA4B;EAC5B,sBAAsB;EACtB,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,sBAAsB;EACtB,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;AACX;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,QAAQ;AACV;;AAEA;;EAEE,cAAc;EACd,iCAAiC;AACnC;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;;EAGE,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,gBAAgB;EAChB,2BAA2B;EAC3B,kBAAkB;AACpB;;AAEA;;;;EAIE,0BAA0B;AAC5B;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,gBAAgB;EAChB,qCAAqC;EACrC,2BAA2B;AAC7B;;AAEA;EACE,yBAAyB;EACzB,WAAW;AACb;;AAEA;;EAEE,sBAAsB;EACtB,aAAa;AACf;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,sBAAsB;AACxB;;AAEA;;EAEE,YAAY;AACd;;AAEA;EACE,uBAAuB;EACvB,YAAY;EACZ,aAAa;EACb,yBAAyB;AAC3B;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,sBAAsB;EACtB,YAAY;AACd;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;;EAEE,iCAAiC;EACjC,2BAA2B;EAC3B,YAAY;EACZ,kCAAkC;AACpC;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,eAAe;EACf,aAAa;AACf;;AAEA;EACE,eAAe;EACf,YAAY;AACd;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,qBAAqB;EACrB,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,4BAA4B;EAC5B,yBAAyB;EACzB,eAAe;EACf,kCAAkC;EAClC,aAAa;EACb,cAAc;EACd,kBAAkB;EAClB,WAAW;EACX,kBAAkB;AACpB;;AAEA;EACE;IACE,WAAW;IACX,gBAAgB;EAClB;;EAEA;IACE,WAAW;EACb;AACF;;AAEA;EACE;IACE,kBAAkB;EACpB;;EAEA;IACE,kBAAkB;EACpB;;EAEA;;;IAGE,eAAe;EACjB;;EAEA;;IAEE,YAAY;IACZ,YAAY;EACd;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,WAAW;IACX,kBAAkB;EACpB;;EAEA;IACE,WAAW;EACb;AACF",sourcesContent:["* {\n  box-sizing: border-box;\n  padding: 0px;\n  margin: 0px;\n}\n\nbody {\n  background-color: #000;\n}\n\n#navbar {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 10vh;\n  color: #fff;\n}\n\n#navbar h1 {\n  margin-top: 30px;\n}\n\n#navbar h1,\n#navbar h3 {\n  letter-spacing: 5px;\n  font-weight: bold;\n  font-family: 'Oswald', sans-serif;\n}\n\n#gradient {\n  background-image: linear-gradient(to bottom, transparent 0%, black 100%);\n  height: 50vh;\n}\n\n#header {\n  background: url(./images/villacarlotta.jpg) center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 50vh;\n}\n\n#main {\n  color: white;\n  background-color: #000;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 25px;\n}\n.container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n}\n\n.container,\n#rooms h4 {\n  color: #adadad;\n  font-family: 'Oswald', sans-serif;\n}\n\n#rooms h4 {\n  text-align: center;\n  margin-bottom: 8px;\n}\n\nlabel {\n  font-size: large;\n}\n\ninput#classic-pop,\ninput#triple-pop,\ninput#quadruple-pop {\n  height: 35px;\n  width: 55px;\n  border: none;\n  border-radius: 20px;\n  font-size: large;\n  background-color: aliceblue;\n  text-align: center;\n}\n\ninput#classic-pop:focus-visible,\ninput#triple-pop:focus-visible,\ninput#quadruple-pop:focus-visible,\ninput#start:focus-visible {\n  outline: 4px solid #930707;\n}\n\ninput#start {\n  height: 45px;\n  width: 150px;\n  font-size: large;\n  font-family: 'Oswald', Georgia, serif;\n  background-color: aliceblue;\n}\n\ntable#table {\n  border-collapse: collapse;\n  font: large;\n}\n\ntd,\nth {\n  border: 1px solid #ddd;\n  padding: 10px;\n}\n\nth {\n  background-color: #930707;\n}\n\ntr:nth-child(odd) {\n  background-color: #fdfdfd;\n}\n\ntr:nth-child(even) {\n  background-color: #f2f2f2;\n}\n\ntr:hover {\n  background-color: #ddd;\n}\n\ntfoot,\ntbody {\n  color: black;\n}\n\n.delete {\n  background-color: black;\n  border: none;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.delete img {\n  width: 35px;\n  height: 35px;\n  cursor: pointer;\n}\n\n.muda {\n  background-color: #000;\n  border: none;\n}\n\nbutton:active {\n  transform: translateY(5px);\n}\n\nbutton:hover {\n  background-color: #c4dff7;\n}\n\nbutton#ratecalc,\nbutton#dorder {\n  font-family: 'Oswald', sans-serif;\n  background-color: aliceblue;\n  border: none;\n  transition: transform 0.3s ease-in;\n}\n\nbutton#ratecalc {\n  height: 45px;\n  width: 150px;\n  font-size: 18px;\n  padding: 10px;\n}\n\nbutton#dorder {\n  font-size: 13px;\n  padding: 8px;\n}\n\n#footer {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 15vh;\n  font-size: large;\n}\n\na {\n  text-decoration: none;\n  color: #930707;\n}\n\na:hover {\n  color: #700505;\n}\n\n.error {\n  background-color: lightcoral;\n  border: 1px solid darkred;\n  font-size: 14px;\n  font-family: 'Georgia', sans-serif;\n  padding: 10px;\n  color: darkred;\n  border-radius: 5px;\n  width: 40vw;\n  text-align: center;\n}\n\n@media screen and (max-width: 700px) {\n  table#table {\n    width: 90vw;\n    font-size: small;\n  }\n\n  .error {\n    width: 70vw;\n  }\n}\n\n@media screen and (max-width: 390px) {\n  h1 {\n    font-size: 1.25rem;\n  }\n\n  h3 {\n    font-size: 1.15rem;\n  }\n\n  input#hotelpop,\n  label,\n  #ratecalc {\n    font-size: 1rem;\n  }\n\n  #ratecalc,\n  input#start {\n    width: 125px;\n    height: 35px;\n  }\n\n  input#start {\n    font-size: small;\n  }\n\n  table#table {\n    width: 80vw;\n    font-size: smaller;\n  }\n\n  .error {\n    width: 70vw;\n  }\n}\n"],sourceRoot:""}]);const d=A},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(r)for(var s=0;s<this.length;s++){var i=this[s][0];null!=i&&(c[i]=!0)}for(var l=0;l<e.length;l++){var A=[].concat(e[l]);r&&c[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),n.push(A))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),c=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(c).concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},c=[],s=0;s<e.length;s++){var i=e[s],l=r.base?i[0]+r.base:i[0],A=o[l]||0,u="".concat(l," ").concat(A);o[l]=A+1;var d=t(u),p={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==d)n[d].references++,n[d].updater(p);else{var f=a(p,r);r.byIndex=s,n.splice(s,0,{identifier:u,updater:f,references:1})}c.push(u)}return c}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var c=0;c<o.length;c++){var s=t(o[c]);n[s].references--}for(var i=r(e,a),l=0;l<o.length;l++){var A=t(o[l]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}o=i}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},138:(e,n,t)=>{e.exports=t.p+"95d3742b76e427335f86.jpg"},502:(e,n,t)=>{e.exports=t.p+"442dd2da3a88960835c1.png"}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,(()=>{var e=t(379),n=t.n(e),r=t(795),a=t.n(r),o=t(569),c=t.n(o),s=t(565),i=t.n(s),l=t(216),A=t.n(l),u=t(589),d=t.n(u),p=t(426),f={};f.styleTagTransform=d(),f.setAttributes=i(),f.insert=c().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=A(),n()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;var b=t(502);const E=t.p+"static/media/federico.526fc556.mp3",C=function(){function e(e,n,t){const r=document.querySelectorAll(e),a=document.querySelector(n),o=document.querySelector(t);a.textContent="0.00 EUR",o.textContent="0.00 EUR",r.forEach((e=>{let n=Number(e.textContent.split(" ")[0]),t=Number(a.textContent.split(" ")[0]);t=(t+n).toFixed(2);let c=(t/r.length).toFixed(2);0===r.length?o.textContent="0.00 EUR":o.textContent=c+" EUR",a.textContent=`${t} EUR`}))}function n(e){const n=document.createElement("div");n.classList.add("error");const t=document.querySelector("#main"),r=t.querySelector("#table");n.textContent=e,t.insertBefore(n,r)}return{returnDate:function(){return document.querySelector("#start").value},returnRoomsSold:function(e){const n=document.querySelector(".container#room-field");switch(!0){case"Classic"===e:return n.querySelector("#classic-pop").value;case"JST"===e:return n.querySelector("#triple-pop").value;case"JSQ"===e:return n.querySelector("#quadruple-pop").value;case"All"===e:return Number(Number(n.querySelector("#quadruple-pop").value)+Number(n.querySelector("#triple-pop").value)+Number(n.querySelector("#classic-pop").value))}},returnRoomType:function(){const e=document.getElementById("rooms"),n=e.querySelector("#mus"),t=e.querySelector("#m"),r=e.querySelector("#jst"),a=e.querySelector("#jsq"),o=e.querySelector("#suite");switch(!0){case n.checked:return 0;case t.checked:return 1;case r.checked:return 2;case a.checked:return 3;case o.checked:return 4}},createNewTableRecord:function(n,t,r,a,o){const c=document.querySelector("#info").insertRow(),s=c.insertCell(),i=new Image;i.src=b,s.classList.add("delete"),s.appendChild(i),i.addEventListener("click",(()=>{c.remove(),e(".price","#total","#average"),e(".ebprice","#ebtotal","#ebavg"),e(".lmprice","#lmtotal","#lmavg")})),c.insertCell().textContent=o,c.insertCell().textContent=n,c.insertCell().textContent=t,c.insertCell().textContent=r;const l=c.insertCell();l.setAttribute("class","price"),l.textContent=a,function(e,n){const t=Number(e.split(".")[0]);let r,a;"JSQ"===n.cells[2].textContent?(r=.15*(t-30),a=.1*(t-30)):"JST"===n.cells[2].textContent?(r=.15*(t-15),a=.1*(t-15)):(r=.15*t,a=.1*t),(t-r).toFixed(2);let o=(t-a).toFixed(2);const c=n.insertCell();c.classList.add("lmprice"),c.textContent=`${o} EUR`}(a,c)},updateTotal:e,checkForErrors:function(){const e=document.querySelector("#start"),t=document.querySelector("#classic-pop"),r=document.querySelector("#triple-pop"),a=document.querySelector("#quadruple-pop");return""===e.value&&""===t.value?(n("Per calcolare la tariffa bisogna specificare il numero di camere vendute e la data!"),1):NaN===isNaN(Number(t.value))||t.value>25?(n("Il numero delle stanze deve essere inserito in formato numerico e non può eccedere le 25 unità (l'hotel ha solo 25 stanze)"),1):""===e.value?(n("Non dimenticare di inserire la data per la quale calcolare la tariffa!"),1):""===t.value?(n("Non dimenticare di inserire il numero di camere vendute per calcolare la BAR!"),1):a.value>3||r.value>4?(n("Il numero di camere elencate in uno degli slot è superiore a quelle dello stesso tipo presenti in hotel"),1):a.value<0||r.value<0||t.value<0?(new Audio(E).play(),n("Quindi per calcolare le bar devo andare dal CRM Guest In House?"),1):0},deleteErrorDiv:function(){const e=document.querySelector(".error");null!==e&&e.remove()},orderByDate:function(){const e=document.querySelector("tbody"),n=Array.from(e.querySelectorAll("tr"));if(n.length<2)return;const t=n.sort((function(e,n){return new Date(e.cells[1].textContent)<new Date(n.cells[1].textContent)?-1:new Date(e.cells[1].textContent)>new Date(n.cells[1].textContent)?1:0}));n.forEach((e=>e.remove())),t.forEach((n=>e.appendChild(n)))}}}(),m=function(e){let n;switch(!0){case new Date(e)<=new Date("2022-03-07")&&new Date(e)>=new Date("2022-01-03")||new Date(e)<=new Date("2022-12-22")&&new Date(e)>=new Date("2022-10-26"):n=0;break;case new Date(e)<=new Date("2022-04-11")&&new Date(e)>=new Date("2022-03-08")||new Date(e)<=new Date("2022-10-25")&&new Date(e)>=new Date("2022-09-30")||new Date(e)<=new Date("2022-12-29")&&new Date(e)>=new Date("2022-12-23"):n=1;break;case new Date(e)<=new Date("2022-04-25")&&new Date(e)>=new Date("2022-04-12")||new Date(e)<=new Date("2022-06-09")&&new Date(e)>=new Date("2022-05-27")||new Date(e)<=new Date("2022-09-29")&&new Date(e)>=new Date("2022-09-16"):n=2;break;case new Date(e)<=new Date("2022-05-26")&&new Date(e)>=new Date("2022-04-26")||new Date(e)<=new Date("2022-08-08")&&new Date(e)>=new Date("2022-07-19")||new Date(e)<=new Date("2022-07-18")&&new Date(e)>=new Date("2022-06-10")||new Date(e)<=new Date("2022-09-15")&&new Date(e)>=new Date("2022-08-19"):n=3;break;case new Date(e)<=new Date("2022-08-18")&&new Date(e)>=new Date("2022-08-09")||new Date(e)<=new Date("2023-01-02")&&new Date(e)>=new Date("2022-12-30")||new Date(e)<=new Date("2022-01-02")&&new Date(e)>=new Date("2021-12-30"):n=4}return n},h={seasonAndBar:[[[73,88,120,140,210],[76,93,130,150,220],[80,96,130,150,230],[85,105,145,165,240],[90,115,145,165,270],[95,125,160,180,300],[105,140,160,180,340]],[[77,93,125,145,230],[80,96,135,155,240],[83,105,135,155,250],[86,110,155,175,270],[98,120,155,175,300],[105,130,175,195,320],[115,155,175,195,370]],[[82,100,127,147,240],[87,105,135,160,250],[93,110,135,160,260],[98,115,160,180,280],[105,125,160,180,310],[110,135,185,205,340],[120,165,185,205,390]],[[92,107,130,150,260],[95,115,140,165,270],[100,120,140,165,280],[105,135,175,195,300],[115,145,175,195,340],[120,155,200,220,370],[130,175,200,220,410]],[[100,135,155,175,310],[105,140,170,190,320],[110,145,170,190,330],[115,150,190,210,340],[125,165,190,210,390],[130,175,215,240,410],[145,190,215,240,450]]]},g=function(){function e(e){switch(!0){case e.sold<12:e.bar=2;break;case e.sold<14:e.bar=3;break;case 14===e.sold:e.bar=4;break;case 15===noOfClassicSold:e.bar=5;break;case noOfClassicSold>=16:e.bar=6}const n=h.seasonAndBar[e.season][e.bar][e.type];return{season:e.season,bar:e.bar,room:e.type,rate:n,date:e.date}}function n(n){const t=Number(C.returnRoomsSold("Classic")),r=C.returnDate(),a=m(r),o=n;let c;if(!0===function(e){let n=new Date(e)<=new Date("2022-08-31")&&new Date(e)>=new Date("2022-07-01");return console.log(n),n}(r))return e({sold:t,date:r,season:a,type:o});switch(!0){case t<6:c=0;break;case t<9:c=1;break;case t<12:c=2;break;case t<14:c=3;break;case 14===t:c=4;break;case 15===t:c=5;break;case t>=16:c=6}return{season:a,bar:c,room:o,rate:h.seasonAndBar[a][c][o],date:r}}function t(){const e=Number(C.returnRoomsSold("JST")),t=C.returnDate(),r=m(t);let a;switch(!0){case 0===e:a=0;break;case 1===e:a=1;break;case 2===e:a=3;break;case e>2:a=5}let o=h.seasonAndBar[r][a][2],c=n(1).rate;for(;o-15<=c;)a+=1,o=h.seasonAndBar[r][a][2];return{season:r,bar:a,room:2,rate:o,date:t}}return{makeItHuman:function(e,n,t,r,a){let o={};switch(!0){case 0===e:o.season="Low Season";break;case 1===e:o.season="Middle Season";break;case 2===e:o.season="Middle-high Season";break;case 3===e:o.season="High Season";break;case 4===e:o.season="Peak Season"}switch(o.bar=6===n?"RACK":-(n-6),!0){case 0===t:o.room="MUS";break;case 1===t:o.room="M/XX";break;case 2===t:o.room="JST";break;case 3===t:o.room="JSQ";break;case 4===t:o.room="SUITE"}return o.fare=`${r}.00 EUR`,o.date=a,o},calculateClassicsFare:n,calculateQuadrupleFare:function(){const e=Number(C.returnRoomsSold("JSQ")),n=C.returnDate(),r=m(n);let a;switch(!0){case 0===e:a=0;break;case 1===e:a=1;break;case 2===e:a=3;break;case 3===e:a=5}let o=h.seasonAndBar[r][a][3];const c=t().rate;for(;o-30<=c-15;)a+=1,o=h.seasonAndBar[r][a][3];return{season:r,bar:a,room:3,rate:o,date:n}},calculateTripleFare:t,calculateSuiteFare:function(){const e=C.returnRoomsSold("Classic"),n=C.returnDate(),t=m(n);let r;switch(!0){case e<6:r=0;break;case e<9:r=1;break;case e<12:r=2;break;case e<14:r=3;break;case 14===e:r=4;break;case 15===e:r=5;break;case e>=16:r=6}return{season:t,bar:r,room:4,date:n,rate:h.seasonAndBar[t][r][4]}}}}(),B=g;document.querySelector("#ratecalc").addEventListener("click",(function(){if(C.deleteErrorDiv(),1===C.checkForErrors())return;let e,n=C.returnRoomType();switch(!0){case 0===n:e=B.calculateClassicsFare(0);break;case 1===n:e=B.calculateClassicsFare(1);break;case 2===n:e=B.calculateTripleFare();break;case 3===n:e=B.calculateQuadrupleFare();break;case 4===n:e=B.calculateSuiteFare()}const t=B.makeItHuman(e.season,e.bar,e.room,e.rate,e.date);C.createNewTableRecord(t.room,t.bar,t.season,t.fare,t.date),C.updateTotal(".price","#total","#average"),C.updateTotal(".lmprice","#lmtotal","#lmavg")})),document.querySelector("#dorder").addEventListener("click",C.orderByDate)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,