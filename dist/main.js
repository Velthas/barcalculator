(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>u});var r=t(537),o=t.n(r),a=t(645),A=t.n(a),c=t(667),i=t.n(c),s=new URL(t(138),t.b),l=A()(o()),d=i()(s);l.push([n.id,"* {\n    box-sizing: border-box;\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    background-color: #000;\n}\n\n#navbar {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 10vh;\n    color: #fff;\n}\n\n#navbar h1 {\n    margin-top: 30px;\n}\n\n#navbar h1,\n#navbar h3 {\n    letter-spacing: 5px;\n    font-weight: bold;\n    font-family: 'Oswald', sans-serif;\n}\n\n#gradient {\n    background-image: linear-gradient(to bottom, transparent 0%, black 100%);\n    height: 50vh;\n}\n\n#header {\n    background: url("+d+") center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 50vh;\n\n}\n\n#main {\n    color: white;\n    background-color: #000;\n    display:flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 25px;\n}\n.container {\n    display: flex; \n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n}\n\n.container,\n#rooms h4 {\n    color: #adadad;\n    font-family: 'Oswald', sans-serif;\n}\n\n#rooms h4 {\n    text-align: center;\n    margin-bottom: 8px;\n}\n\n\nlabel {\n    font-size: large;\n}\n\ninput#hotelpop {\n    height: 35px;\n    width: 40px;\n    border: none;\n    border-radius: 20px;\n    font-size: large;\n    background-color: aliceblue;\n    text-align: center;\n}\n\ninput#hotelpop:focus-visible,\ninput#start:focus-visible {\n    outline: 4px solid #930707;\n}\n\ninput#start {\n    height: 45px;\n    font-size: large;\n    font-family: 'Oswald', Georgia, serif;\n    background-color: aliceblue;\n}\n\ntable#table {\n    border-collapse: collapse;\n    width: 600px;\n    font: large;\n}\n\ntd, th {\n    border: 1px solid #ddd;\n    padding: 10px;\n}\n\nth {\n    background-color: #930707;\n}\n\ntr:nth-child(odd){\n    background-color: #fdfdfd;\n}\n\ntr:nth-child(even){\n    background-color: #f2f2f2;\n}\n\ntr:hover {\n    background-color: #ddd;\n}\n\ntfoot,\ntbody {\n    color: black;\n}\n\n.muda {\n    background-color: #000;\n    border: none;\n}\n\nbutton:active {\n    transform: translateY(5px);\n}\n\nbutton:hover {\n    background-color: #c4dff7;\n}\n\nbutton#ratecalc,\nbutton#dorder {\n    height: 45px;\n    width: 150px;\n    font-size: 20px;\n    font-family: 'Oswald', sans-serif;\n    background-color: aliceblue;\n    border: none;\n    transition: transform 0.3s ease-in;\n}\n\n#footer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 15vh;\n    font-size: large\n}\n\na {\n    text-decoration: none;\n    color: #930707;\n}\n\na:hover {\n    color: #700505\n}\n\n.error {\n    background-color: lightcoral;\n    border: 1px solid darkred;\n    font-size: 14px;\n    font-family: 'Georgia', sans-serif;\n    padding: 10px;\n    color: darkred;\n    border-radius: 5px;\n    width: 40vw;\n    text-align:center;\n}\n\n@media screen and (max-width: 700px) {\n    table#table {\n        width: 90vw;\n        font-size: small;\n    }\n\n    .error {\n        width: 70vw;\n    }\n}\n\n@media screen and (max-width: 390px) {\n    h1 {\n        font-size: 1.25rem;\n    }\n\n    h3 {\n        font-size: 1.15rem;\n    }\n\n    input#hotelpop,\n    label,\n    #ratecalc\n    {\n        font-size: 1rem;\n    }\n\n    #ratecalc,\n    input#start {\n        width: 125px;\n        height: 35px;\n    }\n\n    input#start {\n        font-size: small;\n    }\n\n\n    table#table {\n        width: 80vw;\n        font-size: smaller;\n    }\n\n    .error {\n        width: 70vw;\n    }\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,gBAAgB;AACpB;;AAEA;;IAEI,mBAAmB;IACnB,iBAAiB;IACjB,iCAAiC;AACrC;;AAEA;IACI,wEAAwE;IACxE,YAAY;AAChB;;AAEA;IACI,0DAAkD;IAClD,4BAA4B;IAC5B,sBAAsB;IACtB,YAAY;;AAEhB;;AAEA;IACI,YAAY;IACZ,sBAAsB;IACtB,YAAY;IACZ,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,QAAQ;AACZ;;AAEA;;IAEI,cAAc;IACd,iCAAiC;AACrC;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;AACtB;;;AAGA;IACI,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,mBAAmB;IACnB,gBAAgB;IAChB,2BAA2B;IAC3B,kBAAkB;AACtB;;AAEA;;IAEI,0BAA0B;AAC9B;;AAEA;IACI,YAAY;IACZ,gBAAgB;IAChB,qCAAqC;IACrC,2BAA2B;AAC/B;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,sBAAsB;IACtB,aAAa;AACjB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;;IAEI,YAAY;AAChB;;AAEA;IACI,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;;IAEI,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,iCAAiC;IACjC,2BAA2B;IAC3B,YAAY;IACZ,kCAAkC;AACtC;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ;AACJ;;AAEA;IACI,qBAAqB;IACrB,cAAc;AAClB;;AAEA;IACI;AACJ;;AAEA;IACI,4BAA4B;IAC5B,yBAAyB;IACzB,eAAe;IACf,kCAAkC;IAClC,aAAa;IACb,cAAc;IACd,kBAAkB;IAClB,WAAW;IACX,iBAAiB;AACrB;;AAEA;IACI;QACI,WAAW;QACX,gBAAgB;IACpB;;IAEA;QACI,WAAW;IACf;AACJ;;AAEA;IACI;QACI,kBAAkB;IACtB;;IAEA;QACI,kBAAkB;IACtB;;IAEA;;;;QAII,eAAe;IACnB;;IAEA;;QAEI,YAAY;QACZ,YAAY;IAChB;;IAEA;QACI,gBAAgB;IACpB;;;IAGA;QACI,WAAW;QACX,kBAAkB;IACtB;;IAEA;QACI,WAAW;IACf;AACJ",sourcesContent:["* {\n    box-sizing: border-box;\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    background-color: #000;\n}\n\n#navbar {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 10vh;\n    color: #fff;\n}\n\n#navbar h1 {\n    margin-top: 30px;\n}\n\n#navbar h1,\n#navbar h3 {\n    letter-spacing: 5px;\n    font-weight: bold;\n    font-family: 'Oswald', sans-serif;\n}\n\n#gradient {\n    background-image: linear-gradient(to bottom, transparent 0%, black 100%);\n    height: 50vh;\n}\n\n#header {\n    background: url(./images/villacarlotta.jpg) center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    height: 50vh;\n\n}\n\n#main {\n    color: white;\n    background-color: #000;\n    display:flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 25px;\n}\n.container {\n    display: flex; \n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n}\n\n.container,\n#rooms h4 {\n    color: #adadad;\n    font-family: 'Oswald', sans-serif;\n}\n\n#rooms h4 {\n    text-align: center;\n    margin-bottom: 8px;\n}\n\n\nlabel {\n    font-size: large;\n}\n\ninput#hotelpop {\n    height: 35px;\n    width: 40px;\n    border: none;\n    border-radius: 20px;\n    font-size: large;\n    background-color: aliceblue;\n    text-align: center;\n}\n\ninput#hotelpop:focus-visible,\ninput#start:focus-visible {\n    outline: 4px solid #930707;\n}\n\ninput#start {\n    height: 45px;\n    font-size: large;\n    font-family: 'Oswald', Georgia, serif;\n    background-color: aliceblue;\n}\n\ntable#table {\n    border-collapse: collapse;\n    width: 600px;\n    font: large;\n}\n\ntd, th {\n    border: 1px solid #ddd;\n    padding: 10px;\n}\n\nth {\n    background-color: #930707;\n}\n\ntr:nth-child(odd){\n    background-color: #fdfdfd;\n}\n\ntr:nth-child(even){\n    background-color: #f2f2f2;\n}\n\ntr:hover {\n    background-color: #ddd;\n}\n\ntfoot,\ntbody {\n    color: black;\n}\n\n.muda {\n    background-color: #000;\n    border: none;\n}\n\nbutton:active {\n    transform: translateY(5px);\n}\n\nbutton:hover {\n    background-color: #c4dff7;\n}\n\nbutton#ratecalc,\nbutton#dorder {\n    height: 45px;\n    width: 150px;\n    font-size: 20px;\n    font-family: 'Oswald', sans-serif;\n    background-color: aliceblue;\n    border: none;\n    transition: transform 0.3s ease-in;\n}\n\n#footer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 15vh;\n    font-size: large\n}\n\na {\n    text-decoration: none;\n    color: #930707;\n}\n\na:hover {\n    color: #700505\n}\n\n.error {\n    background-color: lightcoral;\n    border: 1px solid darkred;\n    font-size: 14px;\n    font-family: 'Georgia', sans-serif;\n    padding: 10px;\n    color: darkred;\n    border-radius: 5px;\n    width: 40vw;\n    text-align:center;\n}\n\n@media screen and (max-width: 700px) {\n    table#table {\n        width: 90vw;\n        font-size: small;\n    }\n\n    .error {\n        width: 70vw;\n    }\n}\n\n@media screen and (max-width: 390px) {\n    h1 {\n        font-size: 1.25rem;\n    }\n\n    h3 {\n        font-size: 1.15rem;\n    }\n\n    input#hotelpop,\n    label,\n    #ratecalc\n    {\n        font-size: 1rem;\n    }\n\n    #ratecalc,\n    input#start {\n        width: 125px;\n        height: 35px;\n    }\n\n    input#start {\n        font-size: small;\n    }\n\n\n    table#table {\n        width: 80vw;\n        font-size: smaller;\n    }\n\n    .error {\n        width: 70vw;\n    }\n}"],sourceRoot:""}]);const u=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(r)for(var c=0;c<this.length;c++){var i=this[c][0];null!=i&&(A[i]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);r&&A[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),A=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(A).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},A=[],c=0;c<n.length;c++){var i=n[c],s=r.base?i[0]+r.base:i[0],l=a[s]||0,d="".concat(s," ").concat(l);a[s]=l+1;var u=t(d),f={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==u)e[u].references++,e[u].updater(f);else{var p=o(f,r);r.byIndex=c,e.splice(c,0,{identifier:d,updater:p,references:1})}A.push(d)}return A}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var A=0;A<a.length;A++){var c=t(a[A]);e[c].references--}for(var i=r(n,o),s=0;s<a.length;s++){var l=t(a[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=i}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},138:(n,e,t)=>{n.exports=t.p+"95d3742b76e427335f86.jpg"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),A=t.n(a),c=t(565),i=t.n(c),s=t(216),l=t.n(s),d=t(589),u=t.n(d),f=t(426),p={};p.styleTagTransform=u(),p.setAttributes=i(),p.insert=A().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=l(),e()(f.Z,p),f.Z&&f.Z.locals&&f.Z.locals;const h=function(n){let e;switch(!0){case new Date(n)<=new Date("2022-03-07")&&new Date(n)>=new Date("2022-01-03")||new Date(n)<=new Date("2022-12-22")&&new Date(n)>=new Date("2022-10-26"):e=0;break;case new Date(n)<=new Date("2022-04-11")&&new Date(n)>=new Date("2022-03-08")||new Date(n)<=new Date("2022-07-04")&&new Date(n)>=new Date("2022-06-10")||new Date(n)<=new Date("2022-10-25")&&new Date(n)>=new Date("2022-30-09")||new Date(n)<=new Date("2022-12-29")&&new Date(n)>=new Date("2022-12-23"):e=1;break;case new Date(n)<=new Date("2022-04-25")&&new Date(n)>=new Date("2022-04-12")||new Date(n)<=new Date("2022-06-09")&&new Date(n)>=new Date("2022-05-27")||new Date(n)<=new Date("2022-07-18")&&new Date(n)>=new Date("2022-07-05")||new Date(n)<=new Date("2022-09-16")&&new Date(n)>=new Date("2022-09-29"):e=2;break;case new Date(n)<=new Date("2022-05-26")&&new Date(n)>=new Date("2022-04-26")||new Date(n)<=new Date("2022-08-08")&&new Date(n)>=new Date("2022-07-19")||new Date(n)<=new Date("2022-09-15")&&new Date(n)>=new Date("2022-08-19"):e=3;break;case new Date(n)<=new Date("2022-08-18")&&new Date(n)>=new Date("2022-08-09")||new Date(n)<=new Date("2023-01-02")&&new Date(n)>=new Date("2022-12-30"):e=4}return e},C=function(){function n(n){const e=document.createElement("div");e.classList.add("error");const t=document.querySelector("#main"),r=t.querySelector("#table");e.textContent=n,t.insertBefore(e,r)}return{returnDate:function(){return document.querySelector("#start").value},returnRoomsSold:function(){return document.querySelector("#hotelpop").value},returnRoomType:function(){const n=document.getElementById("rooms"),e=n.querySelector("#mus"),t=n.querySelector("#m"),r=n.querySelector("#jst"),o=n.querySelector("#jsq"),a=n.querySelector("#suite");switch(!0){case e.checked:return 0;case t.checked:return 1;case r.checked:return 2;case o.checked:return 3;case a.checked:return 4}},createNewTableRecord:function(n,e,t,r,o){const a=document.querySelector("#info").insertRow();a.insertCell().textContent=o,a.insertCell().textContent=n,a.insertCell().textContent=e,a.insertCell().textContent=t;const A=a.insertCell();A.setAttribute("class","price"),A.textContent=r},updateTotal:function(){const n=document.querySelectorAll(".price"),e=document.querySelector("#total"),t=document.querySelector("#average");e.textContent="0.00 EUR",n.forEach((r=>{let o=Number(r.textContent.split(".")[0]),a=Number(e.textContent.split(".")[0]);a+=o;let A=(a/n.length).toFixed(2);t.textContent=A+" EUR",e.textContent=`${a}.00 EUR`}))},checkForErrors:function(){const e=document.querySelector("#start"),t=document.querySelector("#hotelpop");return""===e.value&&""===t.value?(n("Per calcolare la tariffa bisogna specificare il numero di camere vendute e la data!"),1):NaN===isNaN(Number(t.value))||t.value>25?(n("Il numero delle stanze deve essere inserito in formato numerico e non può eccedere le 25 unità (l'hotel ha solo 25 stanze)"),1):""===e.value?(n("Non dimenticare di inserire la data per la quale calcolare la tariffa!"),1):""===t.value?(n("Non dimenticare di inserire il numero di camere vendute per calcolare la BAR!"),1):0},deleteErrorDiv:function(){const n=document.querySelector(".error");null!==n&&n.remove()},orderByDate:function(){const n=document.querySelector("tbody"),e=Array.from(n.querySelectorAll("tr"));if(e.length<2)return;const t=e.sort((function(n,e){return new Date(n.cells[0].textContent)<new Date(e.cells[0].textContent)?-1:new Date(n.cells[0].textContent)>new Date(e.cells[0].textContent)?1:0}));e.forEach((n=>n.remove())),t.forEach((e=>n.appendChild(e)))}}}(),b={seasonAndBar:[[[73,88,120,140,210],[76,93,130,150,220],[80,96,130,150,230],[85,105,145,165,240],[90,115,145,165,270],[95,125,160,180,300],[105,140,160,180,340]],[[77,93,125,145,230],[80,96,135,155,240],[83,105,135,155,250],[86,110,155,175,270],[98,120,155,175,300],[105,130,175,195,320],[115,155,175,195,370]],[[82,100,127,147,240],[87,105,135,160,250],[93,110,135,160,260],[98,115,160,180,280],[105,125,160,180,310],[110,135,185,205,340],[120,165,185,205,390]],[[92,107,130,150,260],[95,115,140,165,270],[100,120,140,165,280],[105,135,175,195,300],[115,145,175,195,340],[120,155,200,220,370],[130,175,200,220,410]],[[100,135,155,175,310],[105,140,170,190,320],[110,145,170,190,330],[115,150,190,210,340],[125,165,190,210,390],[130,175,215,240,410],[145,190,215,240,450]]]},m={elaborateDayFare:function(){let n=C.returnDate(),e=h(n),t=function(){const n=Number(C.returnRoomsSold());let e;switch(!0){case n<6:return e=0,e;case n<9:return e=1,e;case n<12:return e=2,e;case n<14:return e=3,e;case n>=14&&n<16:return e=4,e;case 16===n||n>16&&n<24:return e=5,e;case n>=24:return e=6,e}}(),r=C.returnRoomType(),o=function(n,e,t,r,o){let a={};switch(!0){case 0===n:a.season="Low Season";break;case 1===n:a.season="Middle Season";break;case 2===n:a.season="Middle-high Season";break;case 3===n:a.season="High Season";break;case 4===n:a.season="Peak Season"}switch(a.bar=6===e?"RACK":-(e-6),!0){case 0===t:a.room="MUS";break;case 1===t:a.room="M/XX";break;case 2===t:a.room="JST";break;case 3===t:a.room="JSQ";break;case 4===t:a.room="SUITE"}return a.fare=`${r}.00 EUR`,a.date=o,a}(e,t,r,b.seasonAndBar[e][t][r],n);return o}},B=m;!function(){function n(){if(C.deleteErrorDiv(),1===C.checkForErrors())return;const n=B.elaborateDayFare();C.createNewTableRecord(n.room,n.bar,n.season,n.fare,n.date),C.updateTotal()}!function(){const e=document.querySelector("#ratecalc");e.addEventListener("click",n),document.querySelector("#dorder"),e.addEventListener("click",C.orderByDate)}()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,