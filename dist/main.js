(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>d});var r=t(537),a=t.n(r),o=t(645),c=t.n(o),i=t(667),A=t.n(i),s=new URL(t(138),t.b),l=c()(a()),u=A()(s);l.push([e.id,"* {\n  box-sizing: border-box;\n  padding: 0px;\n  margin: 0px;\n}\n\nbody {\n  background-color: #000;\n}\n\n#navbar {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 10vh;\n  color: #fff;\n}\n\n#navbar h1 {\n  margin-top: 30px;\n}\n\n#navbar h1,\n#navbar h3 {\n  letter-spacing: 5px;\n  font-weight: bold;\n  font-family: 'Oswald', sans-serif;\n}\n\n#gradient {\n  background-image: linear-gradient(to bottom, transparent 0%, black 100%);\n  height: 50vh;\n}\n\n#header {\n  background: url("+u+") center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 50vh;\n}\n\n#main {\n  color: white;\n  background-color: #000;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 25px;\n}\n.container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n}\n\n.container,\n#rooms h4 {\n  color: #adadad;\n  font-family: 'Oswald', sans-serif;\n}\n\n#rooms h4 {\n  text-align: center;\n  margin-bottom: 8px;\n}\n\nlabel {\n  font-size: large;\n}\n\ninput#classic-pop,\ninput#triple-pop,\ninput#quadruple-pop {\n  height: 35px;\n  width: 55px;\n  border: none;\n  border-radius: 20px;\n  font-size: large;\n  background-color: aliceblue;\n  text-align: center;\n}\n\ninput#classic-pop:focus-visible,\ninput#triple-pop:focus-visible,\ninput#quadruple-pop:focus-visible,\ninput#start:focus-visible {\n  outline: 4px solid #930707;\n}\n\ninput#start {\n  height: 45px;\n  width: 150px;\n  font-size: large;\n  font-family: 'Oswald', Georgia, serif;\n  background-color: aliceblue;\n}\n\ntable#table {\n  border-collapse: collapse;\n  font: large;\n}\n\ntd,\nth {\n  border: 1px solid #ddd;\n  padding: 10px;\n}\n\nth {\n  background-color: #930707;\n}\n\ntr:nth-child(odd) {\n  background-color: #fdfdfd;\n}\n\ntr:nth-child(even) {\n  background-color: #f2f2f2;\n}\n\ntr:hover {\n  background-color: #ddd;\n}\n\ntfoot,\ntbody {\n  color: black;\n}\n\n.delete {\n  background-color: black;\n  border: none;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.delete img {\n  width: 35px;\n  height: 35px;\n  cursor: pointer;\n}\n\n.muda {\n  background-color: #000;\n  border: none;\n}\n\nbutton:active {\n  transform: translateY(5px);\n}\n\nbutton:hover {\n  background-color: #c4dff7;\n}\n\nbutton#ratecalc,\nbutton#dorder {\n  font-family: 'Oswald', sans-serif;\n  background-color: aliceblue;\n  border: none;\n  transition: transform 0.3s ease-in;\n}\n\nbutton#ratecalc {\n  height: 45px;\n  width: 150px;\n  font-size: 18px;\n  padding: 10px;\n}\n\nbutton#dorder {\n  font-size: 13px;\n  padding: 8px;\n}\n\n#footer {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 15vh;\n  font-size: large;\n}\n\na {\n  text-decoration: none;\n  color: #930707;\n}\n\na:hover {\n  color: #700505;\n}\n\n.error {\n  background-color: lightcoral;\n  border: 1px solid darkred;\n  font-size: 14px;\n  font-family: 'Georgia', sans-serif;\n  padding: 10px;\n  color: darkred;\n  border-radius: 5px;\n  width: 40vw;\n  text-align: center;\n}\n\n@media screen and (max-width: 700px) {\n  table#table {\n    width: 90vw;\n    font-size: small;\n  }\n\n  .error {\n    width: 70vw;\n  }\n}\n\n@media screen and (max-width: 390px) {\n  h1 {\n    font-size: 1.25rem;\n  }\n\n  h3 {\n    font-size: 1.15rem;\n  }\n\n  input#hotelpop,\n  label,\n  #ratecalc {\n    font-size: 1rem;\n  }\n\n  #ratecalc,\n  input#start {\n    width: 125px;\n    height: 35px;\n  }\n\n  input#start {\n    font-size: small;\n  }\n\n  table#table {\n    width: 80vw;\n    font-size: smaller;\n  }\n\n  .error {\n    width: 70vw;\n  }\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,sBAAsB;EACtB,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;EAEE,mBAAmB;EACnB,iBAAiB;EACjB,iCAAiC;AACnC;;AAEA;EACE,wEAAwE;EACxE,YAAY;AACd;;AAEA;EACE,0DAAkD;EAClD,4BAA4B;EAC5B,sBAAsB;EACtB,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,sBAAsB;EACtB,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;AACX;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,QAAQ;AACV;;AAEA;;EAEE,cAAc;EACd,iCAAiC;AACnC;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;;EAGE,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,gBAAgB;EAChB,2BAA2B;EAC3B,kBAAkB;AACpB;;AAEA;;;;EAIE,0BAA0B;AAC5B;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,gBAAgB;EAChB,qCAAqC;EACrC,2BAA2B;AAC7B;;AAEA;EACE,yBAAyB;EACzB,WAAW;AACb;;AAEA;;EAEE,sBAAsB;EACtB,aAAa;AACf;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,sBAAsB;AACxB;;AAEA;;EAEE,YAAY;AACd;;AAEA;EACE,uBAAuB;EACvB,YAAY;EACZ,aAAa;EACb,yBAAyB;AAC3B;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,sBAAsB;EACtB,YAAY;AACd;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;;EAEE,iCAAiC;EACjC,2BAA2B;EAC3B,YAAY;EACZ,kCAAkC;AACpC;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,eAAe;EACf,aAAa;AACf;;AAEA;EACE,eAAe;EACf,YAAY;AACd;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,qBAAqB;EACrB,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,4BAA4B;EAC5B,yBAAyB;EACzB,eAAe;EACf,kCAAkC;EAClC,aAAa;EACb,cAAc;EACd,kBAAkB;EAClB,WAAW;EACX,kBAAkB;AACpB;;AAEA;EACE;IACE,WAAW;IACX,gBAAgB;EAClB;;EAEA;IACE,WAAW;EACb;AACF;;AAEA;EACE;IACE,kBAAkB;EACpB;;EAEA;IACE,kBAAkB;EACpB;;EAEA;;;IAGE,eAAe;EACjB;;EAEA;;IAEE,YAAY;IACZ,YAAY;EACd;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,WAAW;IACX,kBAAkB;EACpB;;EAEA;IACE,WAAW;EACb;AACF",sourcesContent:["* {\n  box-sizing: border-box;\n  padding: 0px;\n  margin: 0px;\n}\n\nbody {\n  background-color: #000;\n}\n\n#navbar {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 10vh;\n  color: #fff;\n}\n\n#navbar h1 {\n  margin-top: 30px;\n}\n\n#navbar h1,\n#navbar h3 {\n  letter-spacing: 5px;\n  font-weight: bold;\n  font-family: 'Oswald', sans-serif;\n}\n\n#gradient {\n  background-image: linear-gradient(to bottom, transparent 0%, black 100%);\n  height: 50vh;\n}\n\n#header {\n  background: url(./images/villacarlotta.jpg) center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 50vh;\n}\n\n#main {\n  color: white;\n  background-color: #000;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 25px;\n}\n.container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n}\n\n.container,\n#rooms h4 {\n  color: #adadad;\n  font-family: 'Oswald', sans-serif;\n}\n\n#rooms h4 {\n  text-align: center;\n  margin-bottom: 8px;\n}\n\nlabel {\n  font-size: large;\n}\n\ninput#classic-pop,\ninput#triple-pop,\ninput#quadruple-pop {\n  height: 35px;\n  width: 55px;\n  border: none;\n  border-radius: 20px;\n  font-size: large;\n  background-color: aliceblue;\n  text-align: center;\n}\n\ninput#classic-pop:focus-visible,\ninput#triple-pop:focus-visible,\ninput#quadruple-pop:focus-visible,\ninput#start:focus-visible {\n  outline: 4px solid #930707;\n}\n\ninput#start {\n  height: 45px;\n  width: 150px;\n  font-size: large;\n  font-family: 'Oswald', Georgia, serif;\n  background-color: aliceblue;\n}\n\ntable#table {\n  border-collapse: collapse;\n  font: large;\n}\n\ntd,\nth {\n  border: 1px solid #ddd;\n  padding: 10px;\n}\n\nth {\n  background-color: #930707;\n}\n\ntr:nth-child(odd) {\n  background-color: #fdfdfd;\n}\n\ntr:nth-child(even) {\n  background-color: #f2f2f2;\n}\n\ntr:hover {\n  background-color: #ddd;\n}\n\ntfoot,\ntbody {\n  color: black;\n}\n\n.delete {\n  background-color: black;\n  border: none;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.delete img {\n  width: 35px;\n  height: 35px;\n  cursor: pointer;\n}\n\n.muda {\n  background-color: #000;\n  border: none;\n}\n\nbutton:active {\n  transform: translateY(5px);\n}\n\nbutton:hover {\n  background-color: #c4dff7;\n}\n\nbutton#ratecalc,\nbutton#dorder {\n  font-family: 'Oswald', sans-serif;\n  background-color: aliceblue;\n  border: none;\n  transition: transform 0.3s ease-in;\n}\n\nbutton#ratecalc {\n  height: 45px;\n  width: 150px;\n  font-size: 18px;\n  padding: 10px;\n}\n\nbutton#dorder {\n  font-size: 13px;\n  padding: 8px;\n}\n\n#footer {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 15vh;\n  font-size: large;\n}\n\na {\n  text-decoration: none;\n  color: #930707;\n}\n\na:hover {\n  color: #700505;\n}\n\n.error {\n  background-color: lightcoral;\n  border: 1px solid darkred;\n  font-size: 14px;\n  font-family: 'Georgia', sans-serif;\n  padding: 10px;\n  color: darkred;\n  border-radius: 5px;\n  width: 40vw;\n  text-align: center;\n}\n\n@media screen and (max-width: 700px) {\n  table#table {\n    width: 90vw;\n    font-size: small;\n  }\n\n  .error {\n    width: 70vw;\n  }\n}\n\n@media screen and (max-width: 390px) {\n  h1 {\n    font-size: 1.25rem;\n  }\n\n  h3 {\n    font-size: 1.15rem;\n  }\n\n  input#hotelpop,\n  label,\n  #ratecalc {\n    font-size: 1rem;\n  }\n\n  #ratecalc,\n  input#start {\n    width: 125px;\n    height: 35px;\n  }\n\n  input#start {\n    font-size: small;\n  }\n\n  table#table {\n    width: 80vw;\n    font-size: smaller;\n  }\n\n  .error {\n    width: 70vw;\n  }\n}\n"],sourceRoot:""}]);const d=l},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(r)for(var i=0;i<this.length;i++){var A=this[i][0];null!=A&&(c[A]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);r&&c[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),c=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(c).concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},c=[],i=0;i<e.length;i++){var A=e[i],s=r.base?A[0]+r.base:A[0],l=o[s]||0,u="".concat(s," ").concat(l);o[s]=l+1;var d=t(u),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==d)n[d].references++,n[d].updater(p);else{var f=a(p,r);r.byIndex=i,n.splice(i,0,{identifier:u,updater:f,references:1})}c.push(u)}return c}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var c=0;c<o.length;c++){var i=t(o[c]);n[i].references--}for(var A=r(e,a),s=0;s<o.length;s++){var l=t(o[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}o=A}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},138:(e,n,t)=>{e.exports=t.p+"95d3742b76e427335f86.jpg"},502:(e,n,t)=>{e.exports=t.p+"442dd2da3a88960835c1.png"}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,(()=>{var e=t(379),n=t.n(e),r=t(795),a=t.n(r),o=t(569),c=t.n(o),i=t(565),A=t.n(i),s=t(216),l=t.n(s),u=t(589),d=t.n(u),p=t(426),f={};f.styleTagTransform=d(),f.setAttributes=A(),f.insert=c().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=l(),n()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;var E=t(502);const b=t.p+"static/media/federico.526fc556.mp3",C=function(){function e(e,n,t){const r=document.querySelectorAll(e),a=document.querySelector(n),o=document.querySelector(t);a.textContent="0.00 EUR",o.textContent="0.00 EUR",r.forEach((e=>{let n=Number(e.textContent.split(" ")[0]),t=Number(a.textContent.split(" ")[0]);t=(t+n).toFixed(2);let c=(t/r.length).toFixed(2);0===r.length?o.textContent="0.00 EUR":o.textContent=c+" EUR",a.textContent=`${t} EUR`}))}function n(e){const n=document.createElement("div");n.classList.add("error");const t=document.querySelector("#main"),r=t.querySelector("#table");n.textContent=e,t.insertBefore(n,r)}return{returnDate:function(){return document.querySelector("#start").value},returnRoomsSold:function(e){const n=document.querySelector(".container#room-field");switch(!0){case"Classic"===e:return n.querySelector("#classic-pop").value;case"JST"===e:return n.querySelector("#triple-pop").value;case"JSQ"===e:return n.querySelector("#quadruple-pop").value;case"All"===e:return Number(Number(n.querySelector("#quadruple-pop").value)+Number(n.querySelector("#triple-pop").value)+Number(n.querySelector("#classic-pop").value))}},returnRoomType:function(){const e=document.getElementById("rooms"),n=e.querySelector("#mus"),t=e.querySelector("#m"),r=e.querySelector("#jst"),a=e.querySelector("#jsq"),o=e.querySelector("#suite");switch(!0){case n.checked:return 0;case t.checked:return 1;case r.checked:return 2;case a.checked:return 3;case o.checked:return 4}},createNewTableRecord:function(n,t,r,a,o){const c=document.querySelector("#info").insertRow(),i=c.insertCell(),A=new Image;A.src=E,i.classList.add("delete"),i.appendChild(A),A.addEventListener("click",(()=>{c.remove(),e(".price","#total","#average"),e(".ebprice","#ebtotal","#ebavg"),e(".lmprice","#lmtotal","#lmavg")})),c.insertCell().textContent=o,c.insertCell().textContent=n,c.insertCell().textContent=t,c.insertCell().textContent=r;const s=c.insertCell();s.setAttribute("class","price"),s.textContent=a,function(e,n){const t=Number(e.split(".")[0]);let r,a;"JSQ"===n.cells[2].textContent?(r=.15*(t-30),a=.1*(t-30)):"JST"===n.cells[2].textContent?(r=.15*(t-15),a=.1*(t-15)):(r=.15*t,a=.1*t);let o=(t-r).toFixed(2),c=(t-a).toFixed(2);const i=n.insertCell();i.classList.add("ebprice"),i.textContent=`${o} EUR`;const A=n.insertCell();A.classList.add("lmprice"),A.textContent=`${c} EUR`}(a,c)},updateTotal:e,checkForErrors:function(){const e=document.querySelector("#start"),t=document.querySelector("#classic-pop"),r=document.querySelector("#triple-pop"),a=document.querySelector("#quadruple-pop");return""===e.value&&""===t.value?(n("Per calcolare la tariffa bisogna specificare il numero di camere vendute e la data!"),1):NaN===isNaN(Number(t.value))||t.value>25?(n("Il numero delle stanze deve essere inserito in formato numerico e non può eccedere le 25 unità (l'hotel ha solo 25 stanze)"),1):""===e.value?(n("Non dimenticare di inserire la data per la quale calcolare la tariffa!"),1):""===t.value?(n("Non dimenticare di inserire il numero di camere vendute per calcolare la BAR!"),1):a.value>3||r.value>4?(n("Il numero di camere elencate in uno degli slot è superiore a quelle dello stesso tipo presenti in hotel"),1):a.value<0||r.value<0||t.value<0?(new Audio(b).play(),n("Quindi per calcolare le bar devo andare dal CRM Guest In House?"),1):0},deleteErrorDiv:function(){const e=document.querySelector(".error");null!==e&&e.remove()},orderByDate:function(){const e=document.querySelector("tbody"),n=Array.from(e.querySelectorAll("tr"));if(n.length<2)return;const t=n.sort((function(e,n){return new Date(e.cells[1].textContent)<new Date(n.cells[1].textContent)?-1:new Date(e.cells[1].textContent)>new Date(n.cells[1].textContent)?1:0}));n.forEach((e=>e.remove())),t.forEach((n=>e.appendChild(n)))}}}(),m=function(e){let n;switch(!0){case new Date(e)<=new Date("2022-03-07")&&new Date(e)>=new Date("2022-01-03")||new Date(e)<=new Date("2022-12-22")&&new Date(e)>=new Date("2022-10-26"):n=0;break;case new Date(e)<=new Date("2022-04-11")&&new Date(e)>=new Date("2022-03-08")||new Date(e)<=new Date("2022-10-25")&&new Date(e)>=new Date("2022-09-30")||new Date(e)<=new Date("2022-12-29")&&new Date(e)>=new Date("2022-12-23"):n=1;break;case new Date(e)<=new Date("2022-04-25")&&new Date(e)>=new Date("2022-04-12")||new Date(e)<=new Date("2022-06-09")&&new Date(e)>=new Date("2022-05-27")||new Date(e)<=new Date("2022-09-29")&&new Date(e)>=new Date("2022-09-16"):n=2;break;case new Date(e)<=new Date("2022-05-26")&&new Date(e)>=new Date("2022-04-26")||new Date(e)<=new Date("2022-08-08")&&new Date(e)>=new Date("2022-07-19")||new Date(e)<=new Date("2022-07-18")&&new Date(e)>=new Date("2022-06-10")||new Date(e)<=new Date("2022-09-15")&&new Date(e)>=new Date("2022-08-19"):n=3;break;case new Date(e)<=new Date("2022-08-18")&&new Date(e)>=new Date("2022-08-09")||new Date(e)<=new Date("2023-01-02")&&new Date(e)>=new Date("2022-12-30")||new Date(e)<=new Date("2022-01-02")&&new Date(e)>=new Date("2021-12-30"):n=4}return n},h={seasonAndBar:[[[73,88,120,140,210],[76,93,130,150,220],[80,96,130,150,230],[85,105,145,165,240],[90,115,145,165,270],[95,125,160,180,300],[105,140,160,180,340]],[[77,93,125,145,230],[80,96,135,155,240],[83,105,135,155,250],[86,110,155,175,270],[98,120,155,175,300],[105,130,175,195,320],[115,155,175,195,370]],[[82,100,127,147,240],[87,105,135,160,250],[93,110,135,160,260],[98,115,160,180,280],[105,125,160,180,310],[110,135,185,205,340],[120,165,185,205,390]],[[92,107,130,150,260],[95,115,140,165,270],[100,120,140,165,280],[105,135,175,195,300],[115,145,175,195,340],[120,155,200,220,370],[130,175,200,220,410]],[[100,135,155,175,310],[105,140,170,190,320],[110,145,170,190,330],[115,150,190,210,340],[125,165,190,210,390],[130,175,215,240,410],[145,190,215,240,450]]]},g=function(){function e(e){const n=Number(C.returnRoomsSold("Classic")),t=C.returnDate(),r=m(t),a=e;let o;switch(!0){case n<6:o=0;break;case n<9:o=1;break;case n<12:o=2;break;case n<14:o=3;break;case 14===n:o=4;break;case 15===n:o=5;break;case n>=16:o=6}return{season:r,bar:o,room:a,rate:h.seasonAndBar[r][o][a],date:t}}function n(){const n=Number(C.returnRoomsSold("JST")),t=C.returnDate(),r=m(t);let a;switch(!0){case 0===n:a=0;break;case 1===n:a=1;break;case 2===n:a=3;break;case n>2:a=5}let o=h.seasonAndBar[r][a][2],c=e(1).rate;for(;o-15<=c;)a+=1,o=h.seasonAndBar[r][a][2];return{season:r,bar:a,room:2,rate:o,date:t}}return{makeItHuman:function(e,n,t,r,a){let o={};switch(!0){case 0===e:o.season="Low Season";break;case 1===e:o.season="Middle Season";break;case 2===e:o.season="Middle-high Season";break;case 3===e:o.season="High Season";break;case 4===e:o.season="Peak Season"}switch(o.bar=6===n?"RACK":-(n-6),!0){case 0===t:o.room="MUS";break;case 1===t:o.room="M/XX";break;case 2===t:o.room="JST";break;case 3===t:o.room="JSQ";break;case 4===t:o.room="SUITE"}return o.fare=`${r}.00 EUR`,o.date=a,o},calculateClassicsFare:e,calculateQuadrupleFare:function(){const e=Number(C.returnRoomsSold("JSQ")),t=C.returnDate(),r=m(t);let a;switch(!0){case 0===e:a=0;break;case 1===e:a=1;break;case 2===e:a=3;case 3===e:a=5}let o=h.seasonAndBar[r][a][3];const c=n().rate;for(;o-30<=c-15;)a+=1,o=h.seasonAndBar[r][a][3];return{season:r,bar:a,room:3,rate:o,date:t}},calculateTripleFare:n,calculateSuiteFare:function(){const e=C.returnRoomsSold("All"),n=C.returnDate(),t=m(n);let r;switch(!0){case e<6:r=0;break;case e<9:r=1;break;case e<12:r=2;break;case e<14:r=3;break;case 14===e:r=4;break;case 15===e:r=5;break;case e>=16:r=6}return{season:t,bar:r,room:4,date:n,rate:h.seasonAndBar[t][r][4]}}}}(),B=g;document.querySelector("#ratecalc").addEventListener("click",(function(){if(C.deleteErrorDiv(),1===C.checkForErrors())return;let e,n=C.returnRoomType();switch(!0){case 0===n:e=B.calculateClassicsFare(0);break;case 1===n:e=B.calculateClassicsFare(1);break;case 2===n:e=B.calculateTripleFare();break;case 3===n:e=B.calculateQuadrupleFare();break;case 4===n:e=B.calculateSuiteFare()}const t=B.makeItHuman(e.season,e.bar,e.room,e.rate,e.date);C.createNewTableRecord(t.room,t.bar,t.season,t.fare,t.date),C.updateTotal(".price","#total","#average"),C.updateTotal(".ebprice","#ebtotal","#ebavg"),C.updateTotal(".lmprice","#lmtotal","#lmavg")})),document.querySelector("#dorder").addEventListener("click",C.orderByDate)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LElBQUlGLEtBQUssZUFDMUIsSUFBSUEsS0FBS0UsSUFBUyxJQUFJRixLQUFLLGVBQzFCLElBQUlBLEtBQUtFLElBQVMsSUFBSUYsS0FBSyxjQUM3QkcsRUFBUyxFQUNULE1BR0YsS0FBTSxJQUFJSCxLQUFLRSxJQUFTLElBQUlGLEtBQUssZUFDL0IsSUFBSUEsS0FBS0UsSUFBUyxJQUFJRixLQUFLLGVBQzFCLElBQUlBLEtBQUtFLElBQVMsSUFBSUYsS0FBSyxlQUMxQixJQUFJQSxLQUFLRSxJQUFTLElBQUlGLEtBQUssZUFDNUIsSUFBSUEsS0FBS0UsSUFBUyxJQUFJRixLQUFLLGVBQzFCLElBQUlBLEtBQUtFLElBQVMsSUFBSUYsS0FBSyxjQUM3QkcsRUFBUyxFQUNULE1BR0YsS0FBTSxJQUFJSCxLQUFLRSxJQUFTLElBQUlGLEtBQUssZUFDL0IsSUFBSUEsS0FBS0UsSUFBUyxJQUFJRixLQUFLLGVBQzFCLElBQUlBLEtBQUtFLElBQVMsSUFBSUYsS0FBSyxlQUMxQixJQUFJQSxLQUFLRSxJQUFTLElBQUlGLEtBQUssZUFDNUIsSUFBSUEsS0FBS0UsSUFBUyxJQUFJRixLQUFLLGVBQzFCLElBQUlBLEtBQUtFLElBQVMsSUFBSUYsS0FBSyxjQUM3QkcsRUFBUyxFQUNULE1BR0YsS0FBTSxJQUFJSCxLQUFLRSxJQUFTLElBQUlGLEtBQUssZUFDL0IsSUFBSUEsS0FBS0UsSUFBUyxJQUFJRixLQUFLLGVBQzFCLElBQUlBLEtBQUtFLElBQVMsSUFBSUYsS0FBSyxlQUMxQixJQUFJQSxLQUFLRSxJQUFTLElBQUlGLEtBQUssZUFDMUIsSUFBSUEsS0FBS0UsSUFBUyxJQUFJRixLQUFLLGVBQzVCLElBQUlBLEtBQUtFLElBQVMsSUFBSUYsS0FBSyxlQUM1QixJQUFJQSxLQUFLRSxJQUFTLElBQUlGLEtBQUssZUFDMUIsSUFBSUEsS0FBS0UsSUFBUyxJQUFJRixLQUFLLGNBQzdCRyxFQUFTLEVBQ1QsTUFHRixLQUFNLElBQUlILEtBQUtFLElBQVMsSUFBSUYsS0FBSyxlQUMvQixJQUFJQSxLQUFLRSxJQUFT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QU0sSUFBQUEsRUFDQUMsS0FuQ2UsRUFvQ2ZSLEtBQUFBLEVBQ0FTLEtBUGdCLGVBQXdCUixHQUFRTSxHQTlCakMsTUFsS0MsR0E4UXRCLElDcE5tQjFKLFNBQVNDLGNBQWMsYUFDL0JrSCxpQkFBaUIsU0ExRDFCLFdBTUUsR0FKQSxtQkFJYyxJQURGLG1CQUNLLE9BR2pCLElBR0kzSixFQUhBbU0sRUFBTyxtQkFNWCxRQUFRLEdBQ04sS0FBYyxJQUFUQSxFQUNIbk0sRUFBT2tNLEVBQUEsc0JBQW9DLEdBQzNDLE1BQ0YsS0FBYyxJQUFUQyxFQUNIbk0sRUFBT2tNLEVBQUEsc0JBQW9DLEdBQzNDLE1BQ0YsS0FBYyxJQUFUQyxFQUNIbk0sRUFBT2tNLEVBQUEsc0JBQ1AsTUFDRixLQUFjLElBQVRDLEVBQ0huTSxFQUFPa00sRUFBQSx5QkFDUCxNQUNGLEtBQWMsSUFBVEMsRUFDSG5NLEVBQU9rTSxFQUFBLHFCQUtYLE1BQU1hLEVBQWdCYixFQUFBLFlBQ3BCbE0sRUFBSzRMLE9BQ0w1TCxFQUFLa00sSUFDTGxNLEVBQUttTSxLQUNMbk0sRUFBS29NLEtBQ0xwTSxFQUFLMkwsTUFJUCx1QkFDRW9CLEVBQWNaLEtBQ2RZLEVBQWNiLElBQ2RhLEVBQWNuQixPQUNkbUIsRUFBYzdGLEtBQ2Q2RixFQUFjcEIsTUFFaEIsY0FBdUIsU0FBVSxTQUFVLFlBQzNDLGNBQXVCLFdBQVksV0FBWSxVQUMvQyxjQUF1QixXQUFZLFdBQVksYUFTbkNuSixTQUFTQyxjQUFjLFdBQy9Ca0gsaUJBQWlCLFFBQVMsZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXJjYWxjdWxhdG9yLy4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly9iYXJjYWxjdWxhdG9yLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9iYXJjYWxjdWxhdG9yLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly9iYXJjYWxjdWxhdG9yLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vYmFyY2FsY3VsYXRvci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9iYXJjYWxjdWxhdG9yLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9iYXJjYWxjdWxhdG9yLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2JhcmNhbGN1bGF0b3IvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vYmFyY2FsY3VsYXRvci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL2JhcmNhbGN1bGF0b3IvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9iYXJjYWxjdWxhdG9yL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2JhcmNhbGN1bGF0b3Ivd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vYmFyY2FsY3VsYXRvci93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vYmFyY2FsY3VsYXRvci93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2JhcmNhbGN1bGF0b3Ivd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9iYXJjYWxjdWxhdG9yL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL2JhcmNhbGN1bGF0b3Ivd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vYmFyY2FsY3VsYXRvci8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly9iYXJjYWxjdWxhdG9yLy4vc3JjL21lZGlhL2ZlZGVyaWNvLm1wMyIsIndlYnBhY2s6Ly9iYXJjYWxjdWxhdG9yLy4vc3JjL2RvbUVsZW1lbnRzLmpzIiwid2VicGFjazovL2JhcmNhbGN1bGF0b3IvLi9zcmMvdGltZUhhbmRsZXIuanMiLCJ3ZWJwYWNrOi8vYmFyY2FsY3VsYXRvci8uL3NyYy8yMDIyLmpzIiwid2VicGFjazovL2JhcmNhbGN1bGF0b3IvLi9zcmMvYmFyLmpzIiwid2VicGFjazovL2JhcmNhbGN1bGF0b3IvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fID0gbmV3IFVSTChcIi4vaW1hZ2VzL3ZpbGxhY2FybG90dGEuanBnXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiKiB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgcGFkZGluZzogMHB4O1xcbiAgbWFyZ2luOiAwcHg7XFxufVxcblxcbmJvZHkge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcXG59XFxuXFxuI25hdmJhciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGhlaWdodDogMTB2aDtcXG4gIGNvbG9yOiAjZmZmO1xcbn1cXG5cXG4jbmF2YmFyIGgxIHtcXG4gIG1hcmdpbi10b3A6IDMwcHg7XFxufVxcblxcbiNuYXZiYXIgaDEsXFxuI25hdmJhciBoMyB7XFxuICBsZXR0ZXItc3BhY2luZzogNXB4O1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICBmb250LWZhbWlseTogJ09zd2FsZCcsIHNhbnMtc2VyaWY7XFxufVxcblxcbiNncmFkaWVudCB7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCB0cmFuc3BhcmVudCAwJSwgYmxhY2sgMTAwJSk7XFxuICBoZWlnaHQ6IDUwdmg7XFxufVxcblxcbiNoZWFkZXIge1xcbiAgYmFja2dyb3VuZDogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKSBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG4gIGhlaWdodDogNTB2aDtcXG59XFxuXFxuI21haW4ge1xcbiAgY29sb3I6IHdoaXRlO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZ2FwOiAyNXB4O1xcbn1cXG4uY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZ2FwOiA4cHg7XFxufVxcblxcbi5jb250YWluZXIsXFxuI3Jvb21zIGg0IHtcXG4gIGNvbG9yOiAjYWRhZGFkO1xcbiAgZm9udC1mYW1pbHk6ICdPc3dhbGQnLCBzYW5zLXNlcmlmO1xcbn1cXG5cXG4jcm9vbXMgaDQge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xcbn1cXG5cXG5sYWJlbCB7XFxuICBmb250LXNpemU6IGxhcmdlO1xcbn1cXG5cXG5pbnB1dCNjbGFzc2ljLXBvcCxcXG5pbnB1dCN0cmlwbGUtcG9wLFxcbmlucHV0I3F1YWRydXBsZS1wb3Age1xcbiAgaGVpZ2h0OiAzNXB4O1xcbiAgd2lkdGg6IDU1cHg7XFxuICBib3JkZXI6IG5vbmU7XFxuICBib3JkZXItcmFkaXVzOiAyMHB4O1xcbiAgZm9udC1zaXplOiBsYXJnZTtcXG4gIGJhY2tncm91bmQtY29sb3I6IGFsaWNlYmx1ZTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuaW5wdXQjY2xhc3NpYy1wb3A6Zm9jdXMtdmlzaWJsZSxcXG5pbnB1dCN0cmlwbGUtcG9wOmZvY3VzLXZpc2libGUsXFxuaW5wdXQjcXVhZHJ1cGxlLXBvcDpmb2N1cy12aXNpYmxlLFxcbmlucHV0I3N0YXJ0OmZvY3VzLXZpc2libGUge1xcbiAgb3V0bGluZTogNHB4IHNvbGlkICM5MzA3MDc7XFxufVxcblxcbmlucHV0I3N0YXJ0IHtcXG4gIGhlaWdodDogNDVweDtcXG4gIHdpZHRoOiAxNTBweDtcXG4gIGZvbnQtc2l6ZTogbGFyZ2U7XFxuICBmb250LWZhbWlseTogJ09zd2FsZCcsIEdlb3JnaWEsIHNlcmlmO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogYWxpY2VibHVlO1xcbn1cXG5cXG50YWJsZSN0YWJsZSB7XFxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xcbiAgZm9udDogbGFyZ2U7XFxufVxcblxcbnRkLFxcbnRoIHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XFxuICBwYWRkaW5nOiAxMHB4O1xcbn1cXG5cXG50aCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTMwNzA3O1xcbn1cXG5cXG50cjpudGgtY2hpbGQob2RkKSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmRmZGZkO1xcbn1cXG5cXG50cjpudGgtY2hpbGQoZXZlbikge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcXG59XFxuXFxudHI6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RkZDtcXG59XFxuXFxudGZvb3QsXFxudGJvZHkge1xcbiAgY29sb3I6IGJsYWNrO1xcbn1cXG5cXG4uZGVsZXRlIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xcbiAgYm9yZGVyOiBub25lO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XFxufVxcblxcbi5kZWxldGUgaW1nIHtcXG4gIHdpZHRoOiAzNXB4O1xcbiAgaGVpZ2h0OiAzNXB4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4ubXVkYSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xcbiAgYm9yZGVyOiBub25lO1xcbn1cXG5cXG5idXR0b246YWN0aXZlIHtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg1cHgpO1xcbn1cXG5cXG5idXR0b246aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2M0ZGZmNztcXG59XFxuXFxuYnV0dG9uI3JhdGVjYWxjLFxcbmJ1dHRvbiNkb3JkZXIge1xcbiAgZm9udC1mYW1pbHk6ICdPc3dhbGQnLCBzYW5zLXNlcmlmO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogYWxpY2VibHVlO1xcbiAgYm9yZGVyOiBub25lO1xcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZS1pbjtcXG59XFxuXFxuYnV0dG9uI3JhdGVjYWxjIHtcXG4gIGhlaWdodDogNDVweDtcXG4gIHdpZHRoOiAxNTBweDtcXG4gIGZvbnQtc2l6ZTogMThweDtcXG4gIHBhZGRpbmc6IDEwcHg7XFxufVxcblxcbmJ1dHRvbiNkb3JkZXIge1xcbiAgZm9udC1zaXplOiAxM3B4O1xcbiAgcGFkZGluZzogOHB4O1xcbn1cXG5cXG4jZm9vdGVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBoZWlnaHQ6IDE1dmg7XFxuICBmb250LXNpemU6IGxhcmdlO1xcbn1cXG5cXG5hIHtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gIGNvbG9yOiAjOTMwNzA3O1xcbn1cXG5cXG5hOmhvdmVyIHtcXG4gIGNvbG9yOiAjNzAwNTA1O1xcbn1cXG5cXG4uZXJyb3Ige1xcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRjb3JhbDtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIGRhcmtyZWQ7XFxuICBmb250LXNpemU6IDE0cHg7XFxuICBmb250LWZhbWlseTogJ0dlb3JnaWEnLCBzYW5zLXNlcmlmO1xcbiAgcGFkZGluZzogMTBweDtcXG4gIGNvbG9yOiBkYXJrcmVkO1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgd2lkdGg6IDQwdnc7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDcwMHB4KSB7XFxuICB0YWJsZSN0YWJsZSB7XFxuICAgIHdpZHRoOiA5MHZ3O1xcbiAgICBmb250LXNpemU6IHNtYWxsO1xcbiAgfVxcblxcbiAgLmVycm9yIHtcXG4gICAgd2lkdGg6IDcwdnc7XFxuICB9XFxufVxcblxcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDM5MHB4KSB7XFxuICBoMSB7XFxuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcXG4gIH1cXG5cXG4gIGgzIHtcXG4gICAgZm9udC1zaXplOiAxLjE1cmVtO1xcbiAgfVxcblxcbiAgaW5wdXQjaG90ZWxwb3AsXFxuICBsYWJlbCxcXG4gICNyYXRlY2FsYyB7XFxuICAgIGZvbnQtc2l6ZTogMXJlbTtcXG4gIH1cXG5cXG4gICNyYXRlY2FsYyxcXG4gIGlucHV0I3N0YXJ0IHtcXG4gICAgd2lkdGg6IDEyNXB4O1xcbiAgICBoZWlnaHQ6IDM1cHg7XFxuICB9XFxuXFxuICBpbnB1dCNzdGFydCB7XFxuICAgIGZvbnQtc2l6ZTogc21hbGw7XFxuICB9XFxuXFxuICB0YWJsZSN0YWJsZSB7XFxuICAgIHdpZHRoOiA4MHZ3O1xcbiAgICBmb250LXNpemU6IHNtYWxsZXI7XFxuICB9XFxuXFxuICAuZXJyb3Ige1xcbiAgICB3aWR0aDogNzB2dztcXG4gIH1cXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLHNCQUFzQjtFQUN0QixZQUFZO0VBQ1osV0FBVztBQUNiOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0Qix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7O0VBRUUsbUJBQW1CO0VBQ25CLGlCQUFpQjtFQUNqQixpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSx3RUFBd0U7RUFDeEUsWUFBWTtBQUNkOztBQUVBO0VBQ0UsMERBQWtEO0VBQ2xELDRCQUE0QjtFQUM1QixzQkFBc0I7RUFDdEIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsWUFBWTtFQUNaLHNCQUFzQjtFQUN0QixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsU0FBUztBQUNYO0FBQ0E7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsUUFBUTtBQUNWOztBQUVBOztFQUVFLGNBQWM7RUFDZCxpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBOzs7RUFHRSxZQUFZO0VBQ1osV0FBVztFQUNYLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIsZ0JBQWdCO0VBQ2hCLDJCQUEyQjtFQUMzQixrQkFBa0I7QUFDcEI7O0FBRUE7Ozs7RUFJRSwwQkFBMEI7QUFDNUI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixxQ0FBcUM7RUFDckMsMkJBQTJCO0FBQzdCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLFdBQVc7QUFDYjs7QUFFQTs7RUFFRSxzQkFBc0I7RUFDdEIsYUFBYTtBQUNmOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBOztFQUVFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2QixZQUFZO0VBQ1osYUFBYTtFQUNiLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osZUFBZTtBQUNqQjs7QUFFQTtFQUNFLHNCQUFzQjtFQUN0QixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSwwQkFBMEI7QUFDNUI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7O0VBRUUsaUNBQWlDO0VBQ2pDLDJCQUEyQjtFQUMzQixZQUFZO0VBQ1osa0NBQWtDO0FBQ3BDOztBQUVBO0VBQ0UsWUFBWTtFQUNaLFlBQVk7RUFDWixlQUFlO0VBQ2YsYUFBYTtBQUNmOztBQUVBO0VBQ0UsZUFBZTtFQUNmLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSw0QkFBNEI7RUFDNUIseUJBQXlCO0VBQ3pCLGVBQWU7RUFDZixrQ0FBa0M7RUFDbEMsYUFBYTtFQUNiLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFO0lBQ0UsV0FBVztJQUNYLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLFdBQVc7RUFDYjtBQUNGOztBQUVBO0VBQ0U7SUFDRSxrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxrQkFBa0I7RUFDcEI7O0VBRUE7OztJQUdFLGVBQWU7RUFDakI7O0VBRUE7O0lBRUUsWUFBWTtJQUNaLFlBQVk7RUFDZDs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxXQUFXO0VBQ2I7QUFDRlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIqIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICBwYWRkaW5nOiAwcHg7XFxuICBtYXJnaW46IDBweDtcXG59XFxuXFxuYm9keSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xcbn1cXG5cXG4jbmF2YmFyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgaGVpZ2h0OiAxMHZoO1xcbiAgY29sb3I6ICNmZmY7XFxufVxcblxcbiNuYXZiYXIgaDEge1xcbiAgbWFyZ2luLXRvcDogMzBweDtcXG59XFxuXFxuI25hdmJhciBoMSxcXG4jbmF2YmFyIGgzIHtcXG4gIGxldHRlci1zcGFjaW5nOiA1cHg7XFxuICBmb250LXdlaWdodDogYm9sZDtcXG4gIGZvbnQtZmFtaWx5OiAnT3N3YWxkJywgc2Fucy1zZXJpZjtcXG59XFxuXFxuI2dyYWRpZW50IHtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHRyYW5zcGFyZW50IDAlLCBibGFjayAxMDAlKTtcXG4gIGhlaWdodDogNTB2aDtcXG59XFxuXFxuI2hlYWRlciB7XFxuICBiYWNrZ3JvdW5kOiB1cmwoLi9pbWFnZXMvdmlsbGFjYXJsb3R0YS5qcGcpIGNlbnRlcjtcXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcbiAgaGVpZ2h0OiA1MHZoO1xcbn1cXG5cXG4jbWFpbiB7XFxuICBjb2xvcjogd2hpdGU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBnYXA6IDI1cHg7XFxufVxcbi5jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBnYXA6IDhweDtcXG59XFxuXFxuLmNvbnRhaW5lcixcXG4jcm9vbXMgaDQge1xcbiAgY29sb3I6ICNhZGFkYWQ7XFxuICBmb250LWZhbWlseTogJ09zd2FsZCcsIHNhbnMtc2VyaWY7XFxufVxcblxcbiNyb29tcyBoNCB7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBtYXJnaW4tYm90dG9tOiA4cHg7XFxufVxcblxcbmxhYmVsIHtcXG4gIGZvbnQtc2l6ZTogbGFyZ2U7XFxufVxcblxcbmlucHV0I2NsYXNzaWMtcG9wLFxcbmlucHV0I3RyaXBsZS1wb3AsXFxuaW5wdXQjcXVhZHJ1cGxlLXBvcCB7XFxuICBoZWlnaHQ6IDM1cHg7XFxuICB3aWR0aDogNTVweDtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XFxuICBmb250LXNpemU6IGxhcmdlO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogYWxpY2VibHVlO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG5pbnB1dCNjbGFzc2ljLXBvcDpmb2N1cy12aXNpYmxlLFxcbmlucHV0I3RyaXBsZS1wb3A6Zm9jdXMtdmlzaWJsZSxcXG5pbnB1dCNxdWFkcnVwbGUtcG9wOmZvY3VzLXZpc2libGUsXFxuaW5wdXQjc3RhcnQ6Zm9jdXMtdmlzaWJsZSB7XFxuICBvdXRsaW5lOiA0cHggc29saWQgIzkzMDcwNztcXG59XFxuXFxuaW5wdXQjc3RhcnQge1xcbiAgaGVpZ2h0OiA0NXB4O1xcbiAgd2lkdGg6IDE1MHB4O1xcbiAgZm9udC1zaXplOiBsYXJnZTtcXG4gIGZvbnQtZmFtaWx5OiAnT3N3YWxkJywgR2VvcmdpYSwgc2VyaWY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBhbGljZWJsdWU7XFxufVxcblxcbnRhYmxlI3RhYmxlIHtcXG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XFxuICBmb250OiBsYXJnZTtcXG59XFxuXFxudGQsXFxudGgge1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcXG4gIHBhZGRpbmc6IDEwcHg7XFxufVxcblxcbnRoIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM5MzA3MDc7XFxufVxcblxcbnRyOm50aC1jaGlsZChvZGQpIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZGZkZmQ7XFxufVxcblxcbnRyOm50aC1jaGlsZChldmVuKSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xcbn1cXG5cXG50cjpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkO1xcbn1cXG5cXG50Zm9vdCxcXG50Ym9keSB7XFxuICBjb2xvcjogYmxhY2s7XFxufVxcblxcbi5kZWxldGUge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XFxuICBib3JkZXI6IG5vbmU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcXG59XFxuXFxuLmRlbGV0ZSBpbWcge1xcbiAgd2lkdGg6IDM1cHg7XFxuICBoZWlnaHQ6IDM1cHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5tdWRhIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XFxuICBib3JkZXI6IG5vbmU7XFxufVxcblxcbmJ1dHRvbjphY3RpdmUge1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDVweCk7XFxufVxcblxcbmJ1dHRvbjpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzRkZmY3O1xcbn1cXG5cXG5idXR0b24jcmF0ZWNhbGMsXFxuYnV0dG9uI2RvcmRlciB7XFxuICBmb250LWZhbWlseTogJ09zd2FsZCcsIHNhbnMtc2VyaWY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBhbGljZWJsdWU7XFxuICBib3JkZXI6IG5vbmU7XFxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlLWluO1xcbn1cXG5cXG5idXR0b24jcmF0ZWNhbGMge1xcbiAgaGVpZ2h0OiA0NXB4O1xcbiAgd2lkdGg6IDE1MHB4O1xcbiAgZm9udC1zaXplOiAxOHB4O1xcbiAgcGFkZGluZzogMTBweDtcXG59XFxuXFxuYnV0dG9uI2RvcmRlciB7XFxuICBmb250LXNpemU6IDEzcHg7XFxuICBwYWRkaW5nOiA4cHg7XFxufVxcblxcbiNmb290ZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGhlaWdodDogMTV2aDtcXG4gIGZvbnQtc2l6ZTogbGFyZ2U7XFxufVxcblxcbmEge1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbiAgY29sb3I6ICM5MzA3MDc7XFxufVxcblxcbmE6aG92ZXIge1xcbiAgY29sb3I6ICM3MDA1MDU7XFxufVxcblxcbi5lcnJvciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGNvcmFsO1xcbiAgYm9yZGVyOiAxcHggc29saWQgZGFya3JlZDtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIGZvbnQtZmFtaWx5OiAnR2VvcmdpYScsIHNhbnMtc2VyaWY7XFxuICBwYWRkaW5nOiAxMHB4O1xcbiAgY29sb3I6IGRhcmtyZWQ7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICB3aWR0aDogNDB2dztcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzAwcHgpIHtcXG4gIHRhYmxlI3RhYmxlIHtcXG4gICAgd2lkdGg6IDkwdnc7XFxuICAgIGZvbnQtc2l6ZTogc21hbGw7XFxuICB9XFxuXFxuICAuZXJyb3Ige1xcbiAgICB3aWR0aDogNzB2dztcXG4gIH1cXG59XFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzkwcHgpIHtcXG4gIGgxIHtcXG4gICAgZm9udC1zaXplOiAxLjI1cmVtO1xcbiAgfVxcblxcbiAgaDMge1xcbiAgICBmb250LXNpemU6IDEuMTVyZW07XFxuICB9XFxuXFxuICBpbnB1dCNob3RlbHBvcCxcXG4gIGxhYmVsLFxcbiAgI3JhdGVjYWxjIHtcXG4gICAgZm9udC1zaXplOiAxcmVtO1xcbiAgfVxcblxcbiAgI3JhdGVjYWxjLFxcbiAgaW5wdXQjc3RhcnQge1xcbiAgICB3aWR0aDogMTI1cHg7XFxuICAgIGhlaWdodDogMzVweDtcXG4gIH1cXG5cXG4gIGlucHV0I3N0YXJ0IHtcXG4gICAgZm9udC1zaXplOiBzbWFsbDtcXG4gIH1cXG5cXG4gIHRhYmxlI3RhYmxlIHtcXG4gICAgd2lkdGg6IDgwdnc7XFxuICAgIGZvbnQtc2l6ZTogc21hbGxlcjtcXG4gIH1cXG5cXG4gIC5lcnJvciB7XFxuICAgIHdpZHRoOiA3MHZ3O1xcbiAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgaWYgKCF1cmwpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG5cbiAgdXJsID0gU3RyaW5nKHVybC5fX2VzTW9kdWxlID8gdXJsLmRlZmF1bHQgOiB1cmwpOyAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cblxuICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICB1cmwgPSB1cmwuc2xpY2UoMSwgLTEpO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH0gLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAvLyBTZWUgaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtMy8jdXJsc1xuXG5cbiAgaWYgKC9bXCInKCkgXFx0XFxuXXwoJTIwKS8udGVzdCh1cmwpIHx8IG9wdGlvbnMubmVlZFF1b3Rlcykge1xuICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodXJsLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKS5yZXBsYWNlKC9cXG4vZywgXCJcXFxcblwiKSwgXCJcXFwiXCIpO1xuICB9XG5cbiAgcmV0dXJuIHVybDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHNjcmlwdFVybCA9IHNjcmlwdHNbc2NyaXB0cy5sZW5ndGggLSAxXS5zcmNcblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5iID0gZG9jdW1lbnQuYmFzZVVSSSB8fCBzZWxmLmxvY2F0aW9uLmhyZWY7XG5cbi8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4vLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbi8vIFtyZXNvbHZlLCByZWplY3QsIFByb21pc2VdID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxudmFyIGluc3RhbGxlZENodW5rcyA9IHtcblx0MTc5OiAwXG59O1xuXG4vLyBubyBjaHVuayBvbiBkZW1hbmQgbG9hZGluZ1xuXG4vLyBubyBwcmVmZXRjaGluZ1xuXG4vLyBubyBwcmVsb2FkZWRcblxuLy8gbm8gSE1SXG5cbi8vIG5vIEhNUiBtYW5pZmVzdFxuXG4vLyBubyBvbiBjaHVua3MgbG9hZGVkXG5cbi8vIG5vIGpzb25wIGZ1bmN0aW9uIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcInN0YXRpYy9tZWRpYS9mZWRlcmljby41MjZmYzU1Ni5tcDNcIjsiLCJpbXBvcnQgeCBmcm9tICcuL2ltYWdlcy94LnBuZyc7XG5pbXBvcnQgZmVkZXJpY28gZnJvbSAnLi9tZWRpYS9mZWRlcmljby5tcDMnXG5cbmNvbnN0IGRvbUhhbmRsZXIgPSAoZnVuY3Rpb24gKCkge1xuICAvL0dldHMgZGF0ZSBmcm9tIGZvcm1cbiAgZnVuY3Rpb24gcmV0dXJuRGF0ZSgpIHtcbiAgICBjb25zdCBpbnB1dERhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc3RhcnQnKTtcbiAgICBsZXQgZGF0ZVN0cmluZyA9IGlucHV0RGF0ZS52YWx1ZTtcblxuICAgIHJldHVybiBkYXRlU3RyaW5nO1xuICB9XG5cbiAgLy9HZXRzIHJvb21zIG9jY3VwaWVkIGZyb20gZm9ybVxuICAvL1VQREFURSAyNi8wNTogVEhJUyBGVU5DVElPTiBDQU4gTk9XIFJFVFVSTiBOVU1CRVJTIEZST00gTVVMVElQTEUgSU5QVVRTXG4gIGZ1bmN0aW9uIHJldHVyblJvb21zU29sZChyb29tVHlwZSkge1xuICAgIC8vR2V0IHRoZSBjb250YWluZXIgdG8gYXZvaWQgcXVlcnlpbmcgdGhlIERPTSByZXBlYXRlZGx5XG4gICAgY29uc3Qgcm9vbVBvcENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250YWluZXIjcm9vbS1maWVsZCcpO1xuXG4gICAgLy9CYXNlZCBvbiB0aGUgcm9vbSB0eXBlIHJlcXVlc3RlZCwgcmV0dXJuIHZhbHVlIG9mIGlucHV0XG4gICAgc3dpdGNoICh0cnVlKSB7XG4gICAgICBjYXNlIHJvb21UeXBlID09PSAnQ2xhc3NpYyc6XG4gICAgICAgIHJldHVybiByb29tUG9wQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJyNjbGFzc2ljLXBvcCcpLnZhbHVlO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2Ugcm9vbVR5cGUgPT09ICdKU1QnOlxuICAgICAgICByZXR1cm4gcm9vbVBvcENvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcjdHJpcGxlLXBvcCcpLnZhbHVlO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2Ugcm9vbVR5cGUgPT09ICdKU1EnOlxuICAgICAgICByZXR1cm4gcm9vbVBvcENvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcjcXVhZHJ1cGxlLXBvcCcpLnZhbHVlO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2Ugcm9vbVR5cGUgPT09ICdBbGwnOlxuICAgICAgICByZXR1cm4gTnVtYmVyKFxuICAgICAgICAgIE51bWJlcihyb29tUG9wQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJyNxdWFkcnVwbGUtcG9wJykudmFsdWUpICtcbiAgICAgICAgICAgIE51bWJlcihyb29tUG9wQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJyN0cmlwbGUtcG9wJykudmFsdWUpICtcbiAgICAgICAgICAgIE51bWJlcihyb29tUG9wQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJyNjbGFzc2ljLXBvcCcpLnZhbHVlKVxuICAgICAgICApO1xuICAgIH1cbiAgfVxuXG4gIC8vR2V0cyB0aGUgdHlwZSBvZiByb29tIHRoZSBmYXJlIGlzIGZvclxuICBmdW5jdGlvbiByZXR1cm5Sb29tVHlwZSgpIHtcbiAgICAvL0dldCB0aGUgZGl2IHdpdGggdGhlIGZvcm0gdG8gYXZvaWQgY2FjaGluZyB0aGUgZG9tIGV2ZXJ5IHRpbWVcbiAgICBjb25zdCByYWRpb0Zvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vbXMnKTtcblxuICAgIC8vR2V0IGFsbCBvZiB0aGUgcmFkaW8gYnV0dG9uc1xuICAgIGNvbnN0IG11c0J1dHRvbiA9IHJhZGlvRm9ybS5xdWVyeVNlbGVjdG9yKCcjbXVzJyk7XG4gICAgY29uc3QgbUJ1dHRvbiA9IHJhZGlvRm9ybS5xdWVyeVNlbGVjdG9yKCcjbScpO1xuICAgIGNvbnN0IGpzdEJ1dHRvbiA9IHJhZGlvRm9ybS5xdWVyeVNlbGVjdG9yKCcjanN0Jyk7XG4gICAgY29uc3QganNxQnV0dG9uID0gcmFkaW9Gb3JtLnF1ZXJ5U2VsZWN0b3IoJyNqc3EnKTtcbiAgICBjb25zdCBzdWl0ZUJ1dHRvbiA9IHJhZGlvRm9ybS5xdWVyeVNlbGVjdG9yKCcjc3VpdGUnKTtcblxuICAgIC8vQ2hlY2sgd2hpY2ggb25lIGlzIGNoZWNrZWRcbiAgICBzd2l0Y2ggKHRydWUpIHtcbiAgICAgIGNhc2UgbXVzQnV0dG9uLmNoZWNrZWQ6XG4gICAgICAgIHJldHVybiAwO1xuICAgICAgY2FzZSBtQnV0dG9uLmNoZWNrZWQ6XG4gICAgICAgIHJldHVybiAxO1xuICAgICAgY2FzZSBqc3RCdXR0b24uY2hlY2tlZDpcbiAgICAgICAgcmV0dXJuIDI7XG4gICAgICBjYXNlIGpzcUJ1dHRvbi5jaGVja2VkOlxuICAgICAgICByZXR1cm4gMztcbiAgICAgIGNhc2Ugc3VpdGVCdXR0b24uY2hlY2tlZDpcbiAgICAgICAgcmV0dXJuIDQ7XG4gICAgfVxuICB9XG5cbiAgLy9DcmVhdGVzIGEgbmV3IGVudHJ5IGZvciB0aGUgdGFibGVcbiAgZnVuY3Rpb24gY3JlYXRlTmV3VGFibGVSZWNvcmQoXG4gICAgdHlwZWRhdGEsXG4gICAgYmFyZGF0YSxcbiAgICBzZWFzb25kYXRhLFxuICAgIHByaWNlZGF0YSxcbiAgICBkYXRhRGF0YVxuICApIHtcbiAgICAvL0dldCB0aGUgYm9keSBvZiB0aGUgdGFibGVcbiAgICBjb25zdCB0YWJsZUJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjaW5mbycpO1xuXG4gICAgLy9DcmVhdGUgYSBuZXcgcm93IGFuZCBhcHBlbmRzIGl0IHRvIHRoZSBib2R5XG4gICAgY29uc3QgbmV3Um93ID0gdGFibGVCb2R5Lmluc2VydFJvdygpO1xuXG4gICAgLy9BZGQgYSBidXR0b24gdG8gZGVsZXRlIGVudHJpZXNcbiAgICBjb25zdCBkZWxldGVDZWxsID0gbmV3Um93Lmluc2VydENlbGwoKTtcbiAgICBjb25zdCB4SWNvbiA9IG5ldyBJbWFnZSgpO1xuICAgIHhJY29uLnNyYyA9IHg7XG4gICAgZGVsZXRlQ2VsbC5jbGFzc0xpc3QuYWRkKCdkZWxldGUnKTtcbiAgICBkZWxldGVDZWxsLmFwcGVuZENoaWxkKHhJY29uKTtcbiAgICB4SWNvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIG5ld1Jvdy5yZW1vdmUoKTtcbiAgICAgIHVwZGF0ZVRvdGFsKCcucHJpY2UnLCAnI3RvdGFsJywgJyNhdmVyYWdlJyk7XG4gICAgICAvLzIwLzAzOiBUSElTIFVQREFURVMgVE9UQUwgRk9SIExBU1QgTUlOVVRFIEFORCBFQVJMWSBCT09LSU5HXG4gICAgICB1cGRhdGVUb3RhbCgnLmVicHJpY2UnLCAnI2VidG90YWwnLCAnI2ViYXZnJyk7XG4gICAgICB1cGRhdGVUb3RhbCgnLmxtcHJpY2UnLCAnI2xtdG90YWwnLCAnI2xtYXZnJyk7XG4gICAgfSk7XG5cbiAgICAvL0NyZWF0ZSByZWxldmFudCBjZWxscyBhbmQgcGx1ZyBkYXRhIGluXG4gICAgY29uc3QgZGF0ZUNlbGwgPSBuZXdSb3cuaW5zZXJ0Q2VsbCgpO1xuICAgIGRhdGVDZWxsLnRleHRDb250ZW50ID0gZGF0YURhdGE7XG5cbiAgICBjb25zdCByb29tVHlwZSA9IG5ld1Jvdy5pbnNlcnRDZWxsKCk7XG4gICAgcm9vbVR5cGUudGV4dENvbnRlbnQgPSB0eXBlZGF0YTtcblxuICAgIGNvbnN0IGJhciA9IG5ld1Jvdy5pbnNlcnRDZWxsKCk7XG4gICAgYmFyLnRleHRDb250ZW50ID0gYmFyZGF0YTtcblxuICAgIGNvbnN0IHNlYXNvbiA9IG5ld1Jvdy5pbnNlcnRDZWxsKCk7XG4gICAgc2Vhc29uLnRleHRDb250ZW50ID0gc2Vhc29uZGF0YTtcblxuICAgIC8vQWRkIGEgY2xhc3MgdG8gJ21hcmsnIHRoZSBwcmljZSBjZWxscyBmb3IgcmV0cmlldmFsLlxuICAgIGNvbnN0IHByaWNlID0gbmV3Um93Lmluc2VydENlbGwoKTtcbiAgICBwcmljZS5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ3ByaWNlJyk7XG4gICAgcHJpY2UudGV4dENvbnRlbnQgPSBwcmljZWRhdGE7XG5cbiAgICBhZGRMYXN0TWludXRlQW5kRWFybHlCb29raW5nKHByaWNlZGF0YSwgbmV3Um93KTtcbiAgICAvLzE5LzAzIEFERCBDT0RFIFRPIERJU1BMQVkgTEFTVCBNSU5VVEUgQU5EIEVBUkxZIEJPT0tJTkcgRkFSRVNcbiAgfVxuXG4gIGZ1bmN0aW9uIGFkZExhc3RNaW51dGVBbmRFYXJseUJvb2tpbmcocHJpY2UsIHJvdykge1xuICAgIC8vQ29udmVydCB0aGUgc3RyaW5nIGludG8gYSBudW1iZXIgYWdhaW5cbiAgICBjb25zdCBudW1iZXJQcmljZSA9IE51bWJlcihwcmljZS5zcGxpdCgnLicpWzBdKTtcblxuICAgIGxldCBFYXJseUJvb2tpbmdEaXNjb3VudDtcbiAgICBsZXQgTGFzdE1pbnV0ZURpc2NvdW50O1xuXG4gICAgLy9DYWxjdWxhdGUgdGhlIGRpc2NvdW50IGFtb3VudHNcbiAgICBpZiAocm93LmNlbGxzWzJdLnRleHRDb250ZW50ID09PSAnSlNRJykge1xuICAgICAgRWFybHlCb29raW5nRGlzY291bnQgPSAobnVtYmVyUHJpY2UgLSAzMCkgKiAwLjE1O1xuICAgICAgTGFzdE1pbnV0ZURpc2NvdW50ID0gKG51bWJlclByaWNlIC0gMzApICogMC4xO1xuICAgIH0gZWxzZSBpZiAocm93LmNlbGxzWzJdLnRleHRDb250ZW50ID09PSAnSlNUJykge1xuICAgICAgRWFybHlCb29raW5nRGlzY291bnQgPSAobnVtYmVyUHJpY2UgLSAxNSkgKiAwLjE1O1xuICAgICAgTGFzdE1pbnV0ZURpc2NvdW50ID0gKG51bWJlclByaWNlIC0gMTUpICogMC4xO1xuICAgIH0gZWxzZSB7XG4gICAgICBFYXJseUJvb2tpbmdEaXNjb3VudCA9IG51bWJlclByaWNlICogMC4xNTtcbiAgICAgIExhc3RNaW51dGVEaXNjb3VudCA9IG51bWJlclByaWNlICogMC4xO1xuICAgIH1cblxuICAgIC8vR2V0IHRoZSBwcmljZXMgZm9yIGJvdGggcGFja2FnZXNcbiAgICBsZXQgRWFybHlCb29raW5nUHJpY2UgPSAobnVtYmVyUHJpY2UgLSBFYXJseUJvb2tpbmdEaXNjb3VudCkudG9GaXhlZCgyKTtcbiAgICBsZXQgTGFzdE1pbnV0ZVByaWNlID0gKG51bWJlclByaWNlIC0gTGFzdE1pbnV0ZURpc2NvdW50KS50b0ZpeGVkKDIpO1xuXG4gICAgY29uc3QgRWFybHlCb29raW5nID0gcm93Lmluc2VydENlbGwoKTtcbiAgICBFYXJseUJvb2tpbmcuY2xhc3NMaXN0LmFkZCgnZWJwcmljZScpO1xuICAgIEVhcmx5Qm9va2luZy50ZXh0Q29udGVudCA9IGAke0Vhcmx5Qm9va2luZ1ByaWNlfSBFVVJgO1xuXG4gICAgY29uc3QgbGFzdE1pbnV0ZSA9IHJvdy5pbnNlcnRDZWxsKCk7XG4gICAgbGFzdE1pbnV0ZS5jbGFzc0xpc3QuYWRkKCdsbXByaWNlJyk7XG4gICAgbGFzdE1pbnV0ZS50ZXh0Q29udGVudCA9IGAke0xhc3RNaW51dGVQcmljZX0gRVVSYDtcbiAgfVxuXG4gIC8vRWFjaCB0aW1lIGEgbmV3IGNlbGwgaXMgYWRkZWQsIGNhbGN1bGF0ZSB0aGUgdG90YWwgYnkgcXVlcnlpbmcgdGhlIGRvbSBmb3IgcHJpY2UgY2VsbHNcbiAgLy9TSU5DRSAyMC8wMzogdG8gcmV1c2Ugd2l0aCBvdGhlciBjb2x1bW5zIGl0IG5vdyB0YWtlcyBhcyBhcmd1bWVudHMgdGhlIGNsYXNzZXMgYW5kIGlkcyBvZiB0aGUgY2VsbHNcbiAgLy9pdCB3YW50cyB0byBjYWxjdWxhdGUgdGhlIHRvdGFscyBhbmQgYXZlcmFnZSBmb3JcbiAgZnVuY3Rpb24gdXBkYXRlVG90YWwocHJpY2VjZWxscywgdG90YWxjZWxsLCBhdmdjZWxsKSB7XG4gICAgLy9RdWVyeSB0aGUgZG9tIGZvciB0aGUgcHJpY2UgY2VsbHMsIHRvdGFsIGFuZCBhdmVyYWdlXG4gICAgY29uc3QgcHJpY2VDZWxscyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwocHJpY2VjZWxscyk7XG4gICAgY29uc3QgdG90YWxDZWxsID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0b3RhbGNlbGwpO1xuICAgIGNvbnN0IGF2ZXJhZ2VDZWxsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhdmdjZWxsKTtcblxuICAgIC8vVGhlIGNhbGN1bGF0aW9uIGlzIGFsd2F5cyByZS1kb25lIG9uIG5ldyBlbnRyeSwgc28gdG90YWwgbXVzdCBiZSByZXNldCBlYWNoIHRpbWUuXG4gICAgdG90YWxDZWxsLnRleHRDb250ZW50ID0gJzAuMDAgRVVSJztcbiAgICBhdmVyYWdlQ2VsbC50ZXh0Q29udGVudCA9ICcwLjAwIEVVUic7XG5cbiAgICAvL0ZvciBlYWNoIG5vZGUgKGNlbGwpIGdldCB0aGUgbnVtYmVyIGFuZCB1cGRhdGUgdGhlIHRvdGFsXG4gICAgcHJpY2VDZWxscy5mb3JFYWNoKChjZWxsKSA9PiB7XG4gICAgICAvL1NsaWNlIGludG8gdGhlIHRvdGFsIGNlbGwgYW5kIHRoZSBvbmVzIGNvbnRhaW5pbmcgdGhlIHJhdGVzXG4gICAgICBsZXQgZmFyZSA9IE51bWJlcihjZWxsLnRleHRDb250ZW50LnNwbGl0KCcgJylbMF0pO1xuICAgICAgbGV0IHRvdGFsID0gTnVtYmVyKHRvdGFsQ2VsbC50ZXh0Q29udGVudC5zcGxpdCgnICcpWzBdKTtcblxuICAgICAgdG90YWwgPSAodG90YWwgKyBmYXJlKS50b0ZpeGVkKDIpO1xuICAgICAgbGV0IGF2ZXJhZ2UgPSAodG90YWwgLyBwcmljZUNlbGxzLmxlbmd0aCkudG9GaXhlZCgyKTtcblxuICAgICAgLy9TbG90IGV2ZXJ5dGhpbmcgaW4gcGxhY2VcbiAgICAgIGlmIChwcmljZUNlbGxzLmxlbmd0aCA9PT0gMCkgYXZlcmFnZUNlbGwudGV4dENvbnRlbnQgPSAnMC4wMCBFVVInO1xuICAgICAgZWxzZSBhdmVyYWdlQ2VsbC50ZXh0Q29udGVudCA9IGF2ZXJhZ2UgKyAnIEVVUic7XG5cbiAgICAgIHRvdGFsQ2VsbC50ZXh0Q29udGVudCA9IGAke3RvdGFsfSBFVVJgO1xuICAgIH0pO1xuICB9XG5cbiAgLy9PcmRlciB0YWJsZSByZWNvcmRzIGJ5IGRhdGVcbiAgZnVuY3Rpb24gb3JkZXJCeURhdGUoKSB7XG4gICAgLy9HZXQgYWxsIHRoZSByb3dzXG4gICAgY29uc3QgdGJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCd0Ym9keScpO1xuICAgIGNvbnN0IHJvd3MgPSBBcnJheS5mcm9tKHRib2R5LnF1ZXJ5U2VsZWN0b3JBbGwoJ3RyJykpO1xuXG4gICAgLy9JZiB0aGVyZSBpcyBub3QgYXQgbGVhc3QgdHdvIHJlY29yZHMsIGp1c3QgZG8gbm90aGluZztcbiAgICBpZiAocm93cy5sZW5ndGggPCAyKSByZXR1cm47XG5cbiAgICAvL0V4dHJhY3QgZWFjaCBkYXRlIGZyb20gdGhlIGFwcHJvcHJpYXRlIGNlbGwgYW5kIHVzZSBpdCB0byBjcmVhdGUgYW4gYXJyYXkgb2Ygb3JkZXJlZCBub2Rlc1xuICAgIGNvbnN0IHNvcnRlZFJvd3MgPSByb3dzLnNvcnQoZnVuY3Rpb24gY29tcGFyZURhdGVzKGEsIGIpIHtcbiAgICAgIGlmIChuZXcgRGF0ZShhLmNlbGxzWzFdLnRleHRDb250ZW50KSA8IG5ldyBEYXRlKGIuY2VsbHNbMV0udGV4dENvbnRlbnQpKSB7XG4gICAgICAgIHJldHVybiAtMTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5ldyBEYXRlKGEuY2VsbHNbMV0udGV4dENvbnRlbnQpID4gbmV3IERhdGUoYi5jZWxsc1sxXS50ZXh0Q29udGVudCkpIHtcbiAgICAgICAgcmV0dXJuIDE7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiAwO1xuICAgIH0pO1xuXG4gICAgLy9EZWxldGUgdGhlIGV4aXN0aW5nIG9uZXMgYW5kIGFwcGVuZCB0aGUgb3JkZXJlZCBvbmVzLlxuICAgIC8vVG90YWwgYW5kIGF2ZXJhZ2UgZG9uJ3QgY2hhbmdlXG4gICAgcm93cy5mb3JFYWNoKChub2RlKSA9PiBub2RlLnJlbW92ZSgpKTtcbiAgICBzb3J0ZWRSb3dzLmZvckVhY2goKG5vZGUpID0+IHRib2R5LmFwcGVuZENoaWxkKG5vZGUpKTtcbiAgfVxuXG4gIC8vUmV0dXJucyAxIGlmIGFuIGVycm9yIGlzIGRldGVjdGVkLCAwIGlmIGV2ZXJ5dGhpbmcgaXMgZmluZS5cbiAgLy9BbHNvIGFwcGVuZHMgZXJyb3IgZGl2IG9uIGVycm9yLiBNYXliZSBzaG91bGQgc3BsaXQgcmVzcG9uc2liaWxpdGllcyBmb3IgU1JQP1xuICBmdW5jdGlvbiBjaGVja0ZvckVycm9ycygpIHtcbiAgICBjb25zdCBkYXRlV2lkZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3N0YXJ0Jyk7XG4gICAgY29uc3Qgcm9vbXNJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjbGFzc2ljLXBvcCcpO1xuICAgIGNvbnN0IHRyaXBsZVJvb21zSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdHJpcGxlLXBvcCcpO1xuICAgIGNvbnN0IHF1YWRydXBsZVJvb21zSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcXVhZHJ1cGxlLXBvcCcpO1xuXG4gICAgaWYgKGRhdGVXaWRnZXQudmFsdWUgPT09ICcnICYmIHJvb21zSW5wdXQudmFsdWUgPT09ICcnKSB7XG4gICAgICBjcmVhdGVFcnJvckRpdihcbiAgICAgICAgJ1BlciBjYWxjb2xhcmUgbGEgdGFyaWZmYSBiaXNvZ25hIHNwZWNpZmljYXJlIGlsIG51bWVybyBkaSBjYW1lcmUgdmVuZHV0ZSBlIGxhIGRhdGEhJ1xuICAgICAgKTtcbiAgICAgIHJldHVybiAxO1xuICAgIH0gZWxzZSBpZiAoXG4gICAgICBpc05hTihOdW1iZXIocm9vbXNJbnB1dC52YWx1ZSkpID09PSBOYU4gfHxcbiAgICAgIHJvb21zSW5wdXQudmFsdWUgPiAyNVxuICAgICkge1xuICAgICAgY3JlYXRlRXJyb3JEaXYoXG4gICAgICAgIFwiSWwgbnVtZXJvIGRlbGxlIHN0YW56ZSBkZXZlIGVzc2VyZSBpbnNlcml0byBpbiBmb3JtYXRvIG51bWVyaWNvIGUgbm9uIHB1w7IgZWNjZWRlcmUgbGUgMjUgdW5pdMOgIChsJ2hvdGVsIGhhIHNvbG8gMjUgc3RhbnplKVwiXG4gICAgICApO1xuICAgICAgcmV0dXJuIDE7XG4gICAgfSBlbHNlIGlmIChkYXRlV2lkZ2V0LnZhbHVlID09PSAnJykge1xuICAgICAgY3JlYXRlRXJyb3JEaXYoXG4gICAgICAgICdOb24gZGltZW50aWNhcmUgZGkgaW5zZXJpcmUgbGEgZGF0YSBwZXIgbGEgcXVhbGUgY2FsY29sYXJlIGxhIHRhcmlmZmEhJ1xuICAgICAgKTtcbiAgICAgIHJldHVybiAxO1xuICAgIH0gZWxzZSBpZiAocm9vbXNJbnB1dC52YWx1ZSA9PT0gJycpIHtcbiAgICAgIGNyZWF0ZUVycm9yRGl2KFxuICAgICAgICAnTm9uIGRpbWVudGljYXJlIGRpIGluc2VyaXJlIGlsIG51bWVybyBkaSBjYW1lcmUgdmVuZHV0ZSBwZXIgY2FsY29sYXJlIGxhIEJBUiEnXG4gICAgICApO1xuICAgICAgcmV0dXJuIDE7XG4gICAgfSBlbHNlIGlmIChxdWFkcnVwbGVSb29tc0lucHV0LnZhbHVlID4gMyB8fCB0cmlwbGVSb29tc0lucHV0LnZhbHVlID4gNCkge1xuICAgICAgY3JlYXRlRXJyb3JEaXYoXG4gICAgICAnSWwgbnVtZXJvIGRpIGNhbWVyZSBlbGVuY2F0ZSBpbiB1bm8gZGVnbGkgc2xvdCDDqCBzdXBlcmlvcmUgYSBxdWVsbGUgZGVsbG8gc3Rlc3NvIHRpcG8gcHJlc2VudGkgaW4gaG90ZWwnXG4gICAgICApO1xuICAgICAgcmV0dXJuIDE7IFxuICAgIH0gZWxzZSBpZiAoIHF1YWRydXBsZVJvb21zSW5wdXQudmFsdWUgPCAwIHx8IHRyaXBsZVJvb21zSW5wdXQudmFsdWUgPCAwIHx8IHJvb21zSW5wdXQudmFsdWUgPCAwICkge1xuICAgICAgbGV0IHdlZVdlZUJvb2JlcnQgPSBuZXcgQXVkaW8oZmVkZXJpY28pO1xuICAgICAgd2VlV2VlQm9vYmVydC5wbGF5KCk7XG4gICAgICBjcmVhdGVFcnJvckRpdignUXVpbmRpIHBlciBjYWxjb2xhcmUgbGUgYmFyIGRldm8gYW5kYXJlIGRhbCBDUk0gR3Vlc3QgSW4gSG91c2U/JylcbiAgICAgIHJldHVybiAxO1xuICAgIH0gICBlbHNlIHJldHVybiAwO1xuICB9XG5cbiAgLy9DcmVhdGVzIGFuIGVycm9yIGRpdiBhbmQgYXBwZW5kcyBpdFxuICBmdW5jdGlvbiBjcmVhdGVFcnJvckRpdihtZXNzYWdlKSB7XG4gICAgY29uc3QgZXJyb3JEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBlcnJvckRpdi5jbGFzc0xpc3QuYWRkKCdlcnJvcicpO1xuXG4gICAgY29uc3QgbWFpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtYWluJyk7XG4gICAgY29uc3QgdGFibGUgPSBtYWluLnF1ZXJ5U2VsZWN0b3IoJyN0YWJsZScpO1xuXG4gICAgZXJyb3JEaXYudGV4dENvbnRlbnQgPSBtZXNzYWdlO1xuICAgIG1haW4uaW5zZXJ0QmVmb3JlKGVycm9yRGl2LCB0YWJsZSk7XG4gIH1cblxuICAvL0RlbGV0ZXMgdGhlIGVycm9yIGRpdlxuICBmdW5jdGlvbiBkZWxldGVFcnJvckRpdigpIHtcbiAgICBjb25zdCBlcnJvckRpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lcnJvcicpO1xuXG4gICAgaWYgKGVycm9yRGl2ID09PSBudWxsKSByZXR1cm47XG4gICAgZWxzZSBlcnJvckRpdi5yZW1vdmUoKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcmV0dXJuRGF0ZSxcbiAgICByZXR1cm5Sb29tc1NvbGQsXG4gICAgcmV0dXJuUm9vbVR5cGUsXG4gICAgY3JlYXRlTmV3VGFibGVSZWNvcmQsXG4gICAgdXBkYXRlVG90YWwsXG4gICAgY2hlY2tGb3JFcnJvcnMsXG4gICAgZGVsZXRlRXJyb3JEaXYsXG4gICAgb3JkZXJCeURhdGUsXG4gIH07XG59KSgpO1xuXG5leHBvcnQgZGVmYXVsdCBkb21IYW5kbGVyO1xuIiwiLy9IYXMgaW5mb3JtYXRpb24gYWJvdXQgc2Vhc29uc1xuY29uc3QgdGltZUhhbmRsZXIgPSAoZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBleHRyYXBvbGF0ZURhdGVTZWFzb24oZGF0ZSkge1xuICAgIGxldCBzZWFzb247XG4gICAgLy9XaGVuIHRoZSB5ZWFyIGNoYW5nZXMgYW5kIHJhdGVzIGFyZSByZXNldCwgdGhlc2UgdmFsdWVzIGhhdmUgdG8gYmUgaW5jcmVhc2VkIGJ5IG9uZSBlYWNoXG4gICAgY29uc3QgY3VycmVudFllYXIgPSAnMjAyMic7XG4gICAgY29uc3QgZm9sbG93aW5nWWVhciA9ICcyMDIzJztcbiAgICBjb25zdCBsYXN0WWVhciA9ICcyMDIxJztcblxuICAgIHN3aXRjaCAodHJ1ZSkge1xuICAgICAgLy9DaGVjayBpZiBpdGBzIGxvdyBzZWFzb25cbiAgICAgIGNhc2UgKG5ldyBEYXRlKGRhdGUpIDw9IG5ldyBEYXRlKGAke2N1cnJlbnRZZWFyfS0wMy0wN2ApICYmXG4gICAgICAgIG5ldyBEYXRlKGRhdGUpID49IG5ldyBEYXRlKGAke2N1cnJlbnRZZWFyfS0wMS0wM2ApKSB8fFxuICAgICAgICAobmV3IERhdGUoZGF0ZSkgPD0gbmV3IERhdGUoYCR7Y3VycmVudFllYXJ9LTEyLTIyYCkgJiZcbiAgICAgICAgICBuZXcgRGF0ZShkYXRlKSA+PSBuZXcgRGF0ZShgJHtjdXJyZW50WWVhcn0tMTAtMjZgKSk6XG4gICAgICAgIHNlYXNvbiA9IDA7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICAvL0NoZWNrIGZvciBtaWRkbGUgc2Vhc29uXG4gICAgICBjYXNlIChuZXcgRGF0ZShkYXRlKSA8PSBuZXcgRGF0ZShgJHtjdXJyZW50WWVhcn0tMDQtMTFgKSAmJlxuICAgICAgICBuZXcgRGF0ZShkYXRlKSA+PSBuZXcgRGF0ZShgJHtjdXJyZW50WWVhcn0tMDMtMDhgKSkgfHxcbiAgICAgICAgKG5ldyBEYXRlKGRhdGUpIDw9IG5ldyBEYXRlKGAke2N1cnJlbnRZZWFyfS0xMC0yNWApICYmXG4gICAgICAgICAgbmV3IERhdGUoZGF0ZSkgPj0gbmV3IERhdGUoYCR7Y3VycmVudFllYXJ9LTA5LTMwYCkpIHx8XG4gICAgICAgIChuZXcgRGF0ZShkYXRlKSA8PSBuZXcgRGF0ZShgJHtjdXJyZW50WWVhcn0tMTItMjlgKSAmJlxuICAgICAgICAgIG5ldyBEYXRlKGRhdGUpID49IG5ldyBEYXRlKGAke2N1cnJlbnRZZWFyfS0xMi0yM2ApKTpcbiAgICAgICAgc2Vhc29uID0gMTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIC8vTWlkLUhpZ2ggU2Vhc29uXG4gICAgICBjYXNlIChuZXcgRGF0ZShkYXRlKSA8PSBuZXcgRGF0ZShgJHtjdXJyZW50WWVhcn0tMDQtMjVgKSAmJlxuICAgICAgICBuZXcgRGF0ZShkYXRlKSA+PSBuZXcgRGF0ZShgJHtjdXJyZW50WWVhcn0tMDQtMTJgKSkgfHxcbiAgICAgICAgKG5ldyBEYXRlKGRhdGUpIDw9IG5ldyBEYXRlKGAke2N1cnJlbnRZZWFyfS0wNi0wOWApICYmXG4gICAgICAgICAgbmV3IERhdGUoZGF0ZSkgPj0gbmV3IERhdGUoYCR7Y3VycmVudFllYXJ9LTA1LTI3YCkpIHx8XG4gICAgICAgIChuZXcgRGF0ZShkYXRlKSA8PSBuZXcgRGF0ZShgJHtjdXJyZW50WWVhcn0tMDktMjlgKSAmJlxuICAgICAgICAgIG5ldyBEYXRlKGRhdGUpID49IG5ldyBEYXRlKGAke2N1cnJlbnRZZWFyfS0wOS0xNmApKTpcbiAgICAgICAgc2Vhc29uID0gMjtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIC8vSGlnaCBTZWFzb25cbiAgICAgIGNhc2UgKG5ldyBEYXRlKGRhdGUpIDw9IG5ldyBEYXRlKGAke2N1cnJlbnRZZWFyfS0wNS0yNmApICYmXG4gICAgICAgIG5ldyBEYXRlKGRhdGUpID49IG5ldyBEYXRlKGAke2N1cnJlbnRZZWFyfS0wNC0yNmApKSB8fFxuICAgICAgICAobmV3IERhdGUoZGF0ZSkgPD0gbmV3IERhdGUoYCR7Y3VycmVudFllYXJ9LTA4LTA4YCkgJiZcbiAgICAgICAgICBuZXcgRGF0ZShkYXRlKSA+PSBuZXcgRGF0ZShgJHtjdXJyZW50WWVhcn0tMDctMTlgKSkgfHxcbiAgICAgICAgICAobmV3IERhdGUoZGF0ZSkgPD0gbmV3IERhdGUoYCR7Y3VycmVudFllYXJ9LTA3LTE4YCkgJiZcbiAgICAgICAgICBuZXcgRGF0ZShkYXRlKSA+PSBuZXcgRGF0ZShgJHtjdXJyZW50WWVhcn0tMDYtMTBgKSkgfHxcbiAgICAgICAgKG5ldyBEYXRlKGRhdGUpIDw9IG5ldyBEYXRlKGAke2N1cnJlbnRZZWFyfS0wOS0xNWApICYmXG4gICAgICAgICAgbmV3IERhdGUoZGF0ZSkgPj0gbmV3IERhdGUoYCR7Y3VycmVudFllYXJ9LTA4LTE5YCkpOlxuICAgICAgICBzZWFzb24gPSAzO1xuICAgICAgICBicmVhaztcblxuICAgICAgLy9QZWFrIFNlYXNvblxuICAgICAgY2FzZSAobmV3IERhdGUoZGF0ZSkgPD0gbmV3IERhdGUoYCR7Y3VycmVudFllYXJ9LTA4LTE4YCkgJiZcbiAgICAgICAgbmV3IERhdGUoZGF0ZSkgPj0gbmV3IERhdGUoYCR7Y3VycmVudFllYXJ9LTA4LTA5YCkpIHx8XG4gICAgICAgIChuZXcgRGF0ZShkYXRlKSA8PSBuZXcgRGF0ZShgJHtmb2xsb3dpbmdZZWFyfS0wMS0wMmApICYmXG4gICAgICAgICAgbmV3IERhdGUoZGF0ZSkgPj0gbmV3IERhdGUoYCR7Y3VycmVudFllYXJ9LTEyLTMwYCkpIHx8XG4gICAgICAgIChuZXcgRGF0ZShkYXRlKSA8PSBuZXcgRGF0ZShgJHtjdXJyZW50WWVhcn0tMDEtMDJgKSAmJlxuICAgICAgICAgIG5ldyBEYXRlKGRhdGUpID49IG5ldyBEYXRlKGAke2xhc3RZZWFyfS0xMi0zMGApKTpcbiAgICAgICAgc2Vhc29uID0gNDtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgcmV0dXJuIHNlYXNvbjtcbiAgfVxuXG4gIHJldHVybiB7IGV4dHJhcG9sYXRlRGF0ZVNlYXNvbiB9O1xufSkoKTtcblxuZXhwb3J0IGRlZmF1bHQgdGltZUhhbmRsZXI7XG4iLCJjb25zdCBwcmljZXMyMDIyID0gZnVuY3Rpb24gKCkge1xuICAgIFxuICAgIC8vVGhpcyBpcyB0aGUgbGVnZW5kIGZvciB0aGUgYXJyYXk6IE1VUywgTUFUUklNT05JQUxFLCBKU1QsIEpTUSwgU1VJVEVcbiAgICAvL0VhY2ggc2Vhc29uIGFycmF5IGhhcyA2IEJBUiBBcnJheXMgd2l0aGluLCBzdGFydGluZyBhdCBCQVIgNiBhbmQgY3VsbWluYXRpbmcgaW4gUkFDSyAoQkFSIDApXG4gICAgY29uc3QgbG93U2Vhc29uID0gW1xuICAgICAgICBbNzMsIDg4LCAxMjAsIDE0MCwgMjEwXSxcbiAgICAgICAgWzc2LCA5MywgMTMwLCAxNTAsIDIyMF0sXG4gICAgICAgIFs4MCwgOTYsIDEzMCwgMTUwLCAyMzBdLFxuICAgICAgICBbODUsIDEwNSwgMTQ1LCAxNjUsIDI0MF0sXG4gICAgICAgIFs5MCwgMTE1LCAxNDUsIDE2NSwgMjcwXSxcbiAgICAgICAgWzk1LCAxMjUsIDE2MCwgMTgwLCAzMDBdLFxuICAgICAgICBbMTA1LCAxNDAsIDE2MCwgMTgwLCAzNDBdLFxuICAgIF1cbiAgICBjb25zdCBtaWRkbGVTZWFzb24gPSBbICAgICAgIFxuICAgICAgICBbNzcsIDkzLCAxMjUsIDE0NSwgMjMwXSxcbiAgICAgICAgWzgwLCA5NiwgMTM1LCAxNTUsIDI0MF0sXG4gICAgICAgIFs4MywgMTA1LCAxMzUsIDE1NSwgMjUwXSxcbiAgICAgICAgWzg2LCAxMTAsIDE1NSwgMTc1LCAyNzBdLFxuICAgICAgICBbOTgsIDEyMCwgMTU1LCAxNzUsIDMwMF0sXG4gICAgICAgIFsxMDUsIDEzMCwgMTc1LCAxOTUsIDMyMF0sXG4gICAgICAgIFsxMTUsIDE1NSwgMTc1LCAxOTUsIDM3MF0sXG4gICAgXVxuICAgIGNvbnN0IG1pZEhpZ2hTZWFzb24gPSBbXG4gICAgICAgIFs4MiwgMTAwLCAxMjcsIDE0NywgMjQwXSxcbiAgICAgICAgWzg3LCAxMDUsIDEzNSwgMTYwLCAyNTBdLFxuICAgICAgICBbOTMsIDExMCwgMTM1LCAxNjAsIDI2MF0sXG4gICAgICAgIFs5OCwgMTE1LCAxNjAsIDE4MCwgMjgwXSxcbiAgICAgICAgWzEwNSwgMTI1LCAxNjAsIDE4MCwgMzEwXSxcbiAgICAgICAgWzExMCwgMTM1LCAxODUsIDIwNSwgMzQwXSxcbiAgICAgICAgWzEyMCwgMTY1LCAxODUsIDIwNSwgMzkwXSxcbiAgICBdXG4gICAgY29uc3QgaGlnaFNlYXNvbiA9IFtcbiAgICAgICAgWzkyLCAxMDcsIDEzMCwgMTUwLCAyNjBdLFxuICAgICAgICBbOTUsIDExNSwgMTQwLCAxNjUsIDI3MF0sXG4gICAgICAgIFsxMDAsIDEyMCwgMTQwLCAxNjUsIDI4MF0sXG4gICAgICAgIFsxMDUsIDEzNSwgMTc1LCAxOTUsIDMwMF0sXG4gICAgICAgIFsxMTUsIDE0NSwgMTc1LCAxOTUsIDM0MF0sXG4gICAgICAgIFsxMjAsIDE1NSwgMjAwLCAyMjAsIDM3MF0sXG4gICAgICAgIFsxMzAsIDE3NSwgMjAwLCAyMjAsIDQxMF0sXG4gICAgXVxuICAgIGNvbnN0IHBlYWtTZWFzb24gPSBbXG4gICAgICAgIFsxMDAsIDEzNSwgMTU1LCAxNzUsIDMxMF0sXG4gICAgICAgIFsxMDUsIDE0MCwgMTcwLCAxOTAsIDMyMF0sXG4gICAgICAgIFsxMTAsIDE0NSwgMTcwLCAxOTAsIDMzMF0sXG4gICAgICAgIFsxMTUsIDE1MCwgMTkwLCAyMTAsIDM0MF0sXG4gICAgICAgIFsxMjUsIDE2NSwgMTkwLCAyMTAsIDM5MF0sXG4gICAgICAgIFsxMzAsIDE3NSwgMjE1LCAyNDAsIDQxMF0sXG4gICAgICAgIFsxNDUsIDE5MCwgMjE1LCAyNDAsIDQ1MF0sXG4gICAgXVxuXG4gICAgLy9BcnJheSBvZiBhcnJheXMgb2YgYXJyYXlzIChoaSksIGVhY2ggaW5kZXggZnJvbSAwIHRvIDQgcmVwcmVzZW50cyBhIHNlYXNvbi5cbiAgICAvL0luc2lkZSB0aG9zZSBzZWFzb25hbCBhcnJheXMgYXJlIHN0b3JlZCBmZWVzIGZvciBkaWZmZXJlbnQgQkFSIGxldmVscy4gXG4gICAgY29uc3Qgc2Vhc29uQW5kQmFyID0gW2xvd1NlYXNvbiwgbWlkZGxlU2Vhc29uLCBtaWRIaWdoU2Vhc29uLCBoaWdoU2Vhc29uLCBwZWFrU2Vhc29uXVxuXG4gICAgcmV0dXJuIHtzZWFzb25BbmRCYXJ9XG5cbn0oKTtcblxuZXhwb3J0IGRlZmF1bHQgcHJpY2VzMjAyMjsiLCJpbXBvcnQgZG9tSGFuZGxlciBmcm9tICcuL2RvbUVsZW1lbnRzJztcbmltcG9ydCB0aW1lSGFuZGxlciBmcm9tICcuL3RpbWVIYW5kbGVyJztcbmltcG9ydCBwcmljZXMyMDIyIGZyb20gJy4vMjAyMic7XG5cbmNvbnN0IGJhckNhbGN1bGF0b3IgPSAoZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBjYWxjdWxhdGVDbGFzc2ljc0ZhcmUodHlwZSkge1xuICAgIC8vR2V0IGhvdyBtYW55IHJvb21zXG4gICAgY29uc3Qgbm9PZkNsYXNzaWNTb2xkID0gTnVtYmVyKGRvbUhhbmRsZXIucmV0dXJuUm9vbXNTb2xkKCdDbGFzc2ljJykpO1xuXG4gICAgLy8gR2V0IHRoZSBkYXRlIGFuZCBzZWFzb25cbiAgICBjb25zdCBkYXRlID0gZG9tSGFuZGxlci5yZXR1cm5EYXRlKCk7XG4gICAgY29uc3Qgc2Vhc29uID0gdGltZUhhbmRsZXIuZXh0cmFwb2xhdGVEYXRlU2Vhc29uKGRhdGUpO1xuXG4gICAgLy8gSXMgYXJndW1lbnQgcGFzc2VkIGlzIDAsIHRoaXMgaXMgYSBkb3VibGUgc2luZ2xlIHVzZSwgaWYgMSBhIGRvdWJsZS5cbiAgICBjb25zdCByb29tVHlwZSA9IHR5cGU7XG5cbiAgICAvLyBFeHRyYWN0IGJhclxuICAgIC8vIENsYXNzaWMgcm9vbXMgb25seSBpbmNyZWFzZSBpZiBvdGhlciBjbGFzc2ljIHJvb21zIGFyZSBzb2xkXG4gICAgLy8gVGhlIGFtb3VudCBvZiB0cmlwbGVzIGFuZCBxdWFkcnVwbGVzIHNvbGQgZG9lcyBub3QgaW5mbHVlbmNlIHRoaXMgcmF0ZVxuICAgIGxldCBiYXI7XG5cbiAgICBzd2l0Y2ggKHRydWUpIHtcbiAgICAgIGNhc2Ugbm9PZkNsYXNzaWNTb2xkIDwgNjpcbiAgICAgICAgYmFyID0gMDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIG5vT2ZDbGFzc2ljU29sZCA8IDk6XG4gICAgICAgIGJhciA9IDE7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBub09mQ2xhc3NpY1NvbGQgPCAxMjpcbiAgICAgICAgYmFyID0gMjtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIG5vT2ZDbGFzc2ljU29sZCA8IDE0OlxuICAgICAgICBiYXIgPSAzO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2Ugbm9PZkNsYXNzaWNTb2xkID09PSAxNDpcbiAgICAgICAgYmFyID0gNDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIG5vT2ZDbGFzc2ljU29sZCA9PT0gMTU6XG4gICAgICAgIGJhciA9IDU7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBub09mQ2xhc3NpY1NvbGQgPj0gMTY6XG4gICAgICAgIGJhciA9IDY7XG4gICAgfVxuXG4gICAgLy8gRXh0cmFjdCByYXRlXG4gICAgY29uc3QgcmF0ZSA9IHByaWNlczIwMjIuc2Vhc29uQW5kQmFyW3NlYXNvbl1bYmFyXVtyb29tVHlwZV07XG5cbiAgICAvLyBSZXR1cm4gYW4gb2JqZWN0IHdpdGggYWxsIHRoZSBpbmZvXG4gICAgbGV0IGZpbmFsaXNlZERhdGEgPSB7IHNlYXNvbiwgYmFyLCByb29tOiByb29tVHlwZSwgcmF0ZSwgZGF0ZSB9O1xuXG4gICAgcmV0dXJuIGZpbmFsaXNlZERhdGE7XG4gIH1cblxuICBmdW5jdGlvbiBjYWxjdWxhdGVUcmlwbGVGYXJlKCkge1xuICAgIC8vIFNlZSBob3cgbWFueSB0cmlwbGVzIGhhdmUgYmVlbiBzb2xkXG4gICAgY29uc3Qgbm9PZlRyaXBsZXNTb2xkID0gTnVtYmVyKGRvbUhhbmRsZXIucmV0dXJuUm9vbXNTb2xkKCdKU1QnKSk7XG5cbiAgICAvLyBHZXQgdGhlIGRhdGUgYW5kIHNlYXNvblxuICAgIGNvbnN0IGRhdGUgPSBkb21IYW5kbGVyLnJldHVybkRhdGUoKTtcbiAgICBjb25zdCBzZWFzb24gPSB0aW1lSGFuZGxlci5leHRyYXBvbGF0ZURhdGVTZWFzb24oZGF0ZSk7XG5cbiAgICAvLyBOdW1iZXIgdHdvIGlzIGZvciB0cmlwbGVcbiAgICBjb25zdCByb29tVHlwZSA9IDI7XG5cbiAgICAvLyBXZSBtaWdodCBuZWVkIHRvIHJlYXNzaWduIHRoZSBiYXJcbiAgICBsZXQgYmFyO1xuXG4gICAgLy8gUXVhZHJ1cGxlIGFuZCBUcmlwbGVzIGFyZSBzcGVjaWFsXG4gICAgLy8gVGhleSBpbmNyZWFzZSBpbiB2YWx1ZSBvbmx5IGlmIGEgcm9vbSBvZiB0aGUgc2FtZSB0eXBlIGlzIHNvbGRcbiAgICAvLyBJZiB0aGUgcmF0ZSBvZiB0aGUgTSBpcyBncmVhdGVyIHRoYW4gdGhhdCBvZiB0aGUgSlNUIGZvciB0d28gcGVvcGxlXG4gICAgLy8gVGhlbiB0aGUgcmF0ZSBvZiB0aGUgSlNUIGluY3JlYXNlcyB1bnRpbCBpdCBzdXJwYXNzZXMgaXRcbiAgICAvLyBTaW1pbGFybHksIEpTUSBjYW5ub3QgY29zdCBsZXNzIHRoYW4gSlNUXG5cbiAgICBzd2l0Y2ggKHRydWUpIHtcbiAgICAgIGNhc2Ugbm9PZlRyaXBsZXNTb2xkID09PSAwOlxuICAgICAgICBiYXIgPSAwO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2Ugbm9PZlRyaXBsZXNTb2xkID09PSAxOlxuICAgICAgICBiYXIgPSAxO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2Ugbm9PZlRyaXBsZXNTb2xkID09PSAyOlxuICAgICAgICBiYXIgPSAzO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2Ugbm9PZlRyaXBsZXNTb2xkID4gMjpcbiAgICAgICAgYmFyID0gNTtcbiAgICB9XG5cbiAgICAvLyBDYWxjdWxhdGUgdGhlIHJhdGUgZm9yIGEgdHJpcGxlO1xuICAgIGxldCB0cmlwbGVSYXRlID0gcHJpY2VzMjAyMi5zZWFzb25BbmRCYXJbc2Vhc29uXVtiYXJdW3Jvb21UeXBlXTtcblxuICAgIC8vRmV0Y2ggdGhlIHJhdGUgZm9yIGEgZG91YmxlIGJhc2VkIG9uIHRoZSBhdmFpbGFibGUgZGF0YTtcbiAgICBsZXQgZG91YmxlUmF0ZSA9IGNhbGN1bGF0ZUNsYXNzaWNzRmFyZSgxKS5yYXRlO1xuXG4gICAgLy9LZWVwIGluY3JlYXNpbmcgdGhlIHByaWNlIHVudGlsIHRoZSBmb2xsb3dpbmcgaXMgdHJ1ZTpcbiAgICAvLyBUcmlwbGUgZm9yIHR3byBwZW9wbGUgY29zdHMgbW9yZSB0aGFuIGRvdWJsZSByb29tLlxuICAgIHdoaWxlICh0cmlwbGVSYXRlIC0gMTUgPD0gZG91YmxlUmF0ZSkge1xuICAgICAgYmFyICs9IDE7XG4gICAgICB0cmlwbGVSYXRlID0gcHJpY2VzMjAyMi5zZWFzb25BbmRCYXJbc2Vhc29uXVtiYXJdW3Jvb21UeXBlXTtcbiAgICB9XG5cbiAgICAvLyBSZXR1cm4gYW4gb2JqZWN0IHdpdGggYWxsIHRoZSBpbmZvXG4gICAgbGV0IGZpbmFsaXNlZERhdGEgPSB7IHNlYXNvbiwgYmFyLCByb29tOiByb29tVHlwZSwgcmF0ZTogdHJpcGxlUmF0ZSwgZGF0ZSB9O1xuXG4gICAgcmV0dXJuIGZpbmFsaXNlZERhdGE7XG4gIH1cblxuICBmdW5jdGlvbiBjYWxjdWxhdGVRdWFkcnVwbGVGYXJlKCkge1xuICAgIC8vIEdldCB0aGUgbnVtYmVyIG9mIHF1YWRydXBsZXMgc29sZFxuICAgIGNvbnN0IG5vT2ZRdWFkcnVwbGVTb2xkID0gTnVtYmVyKGRvbUhhbmRsZXIucmV0dXJuUm9vbXNTb2xkKCdKU1EnKSk7XG5cbiAgICAvLyBHZXQgdGhlIGRhdGUgYW5kIHNlYXNvblxuICAgIGNvbnN0IGRhdGUgPSBkb21IYW5kbGVyLnJldHVybkRhdGUoKTtcbiAgICBjb25zdCBzZWFzb24gPSB0aW1lSGFuZGxlci5leHRyYXBvbGF0ZURhdGVTZWFzb24oZGF0ZSk7XG5cbiAgICAvLyBOdW1iZXIgMyBpcyBmb3IgcXVhZHJ1cGxlXG4gICAgY29uc3Qgcm9vbVR5cGUgPSAzO1xuXG4gICAgLy8gV2UgbWlnaHQgbmVlZCB0byByZWFzc2lnbiB0aGUgYmFyIHNvIGl0IGNhbm5vdCBiZSBhIGNvbnN0XG4gICAgbGV0IGJhcjtcblxuICAgIHN3aXRjaCAodHJ1ZSkge1xuICAgICAgY2FzZSBub09mUXVhZHJ1cGxlU29sZCA9PT0gMDpcbiAgICAgICAgYmFyID0gMDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIG5vT2ZRdWFkcnVwbGVTb2xkID09PSAxOlxuICAgICAgICBiYXIgPSAxO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2Ugbm9PZlF1YWRydXBsZVNvbGQgPT09IDI6XG4gICAgICAgIGJhciA9IDM7XG4gICAgICBjYXNlIG5vT2ZRdWFkcnVwbGVTb2xkID09PSAzOlxuICAgICAgICBiYXIgPSA1O1xuICAgIH1cblxuICAgIGxldCBxdWFkcnVwbGVSYXRlID0gcHJpY2VzMjAyMi5zZWFzb25BbmRCYXJbc2Vhc29uXVtiYXJdW3Jvb21UeXBlXTtcblxuICAgIC8vR2V0IHRoZSB0cmlwbGUgdG8gc2VlIGlmIGJ5IHF1YWRydXBsZSBpcyBsb3dlclxuICAgIGNvbnN0IHRyaXBsZVJhdGUgPSBjYWxjdWxhdGVUcmlwbGVGYXJlKCkucmF0ZTtcblxuICAgIC8vS2VlcCByYWlzaW5nIHVudGlsIGEgcXVhZHJ1cGxlJ3MgcmF0ZSBmb3IgdHdvIHBlb3BsZSBpcyBtb3JlIHRoYW4gYSB0cmlwbGUncyBmb3IgdHdvXG4gICAgd2hpbGUgKHF1YWRydXBsZVJhdGUgLSAzMCA8PSB0cmlwbGVSYXRlIC0gMTUpIHtcbiAgICAgIGJhciArPSAxO1xuICAgICAgcXVhZHJ1cGxlUmF0ZSA9IHByaWNlczIwMjIuc2Vhc29uQW5kQmFyW3NlYXNvbl1bYmFyXVtyb29tVHlwZV07XG4gICAgfVxuXG4gICAgbGV0IGZpbmFsaXNlZERhdGEgPSB7XG4gICAgICBzZWFzb24sXG4gICAgICBiYXIsXG4gICAgICByb29tOiByb29tVHlwZSxcbiAgICAgIHJhdGU6IHF1YWRydXBsZVJhdGUsXG4gICAgICBkYXRlLFxuICAgIH07XG5cbiAgICByZXR1cm4gZmluYWxpc2VkRGF0YTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNhbGN1bGF0ZVN1aXRlRmFyZSgpIHtcbiAgICAvLyBUaGUgcmF0ZSBmb3Igb3VyIGJlc3Qgcm9vbSBpcyBkaXJlY3RseSBpbmZsdWVuY2VkIGJ5IGFsbCB0aGUgbnVtYmVycyBzb2xkXG4gICAgLy8gVGhpcyBpcyB0aGUgb25seSByb29tIHRoYXQgb3BlcmF0ZXMgdXNpbmcgYSBub3JtYWwgc3lzdGVtIEkgYmVsaWV2ZVxuICAgIC8vIEl0J3MgY3JhenksIG5vP1xuICAgIGNvbnN0IHRvdGFsUm9vbXNTb2xkID0gZG9tSGFuZGxlci5yZXR1cm5Sb29tc1NvbGQoJ0FsbCcpO1xuXG4gICAgLy8gR2V0IHRoZSBkYXRlIGFuZCBzZWFzb25cbiAgICBjb25zdCBkYXRlID0gZG9tSGFuZGxlci5yZXR1cm5EYXRlKCk7XG4gICAgY29uc3Qgc2Vhc29uID0gdGltZUhhbmRsZXIuZXh0cmFwb2xhdGVEYXRlU2Vhc29uKGRhdGUpO1xuXG4gICAgLy8gUm9vbSB0eXBlIGlzIHN1aXRlXG4gICAgY29uc3Qgcm9vbVR5cGUgPSA0O1xuXG4gICAgbGV0IGJhcjtcblxuICAgIC8vIE5vdyB0byBjYWxjdWxhdGUgdGhlIHByaWNlIG9mIHRoZSBzdWl0ZVxuICAgIC8vIFRoaXMgaXMgdGhlIG9ubHkgdGhpbmcgdGhhdCBiZWhhdmVzIG5vcm1hbGx5IGhlcmVcbiAgICAvLyBJdCBzY2FsZXMgYmFzZWQgb24gaG93IG1hbnkgb3RoZXIgcm9vbXMgYXJlIHNvbGRcbiAgICBzd2l0Y2ggKHRydWUpIHtcbiAgICAgIGNhc2UgdG90YWxSb29tc1NvbGQgPCA2OlxuICAgICAgICBiYXIgPSAwO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgdG90YWxSb29tc1NvbGQgPCA5OlxuICAgICAgICBiYXIgPSAxO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgdG90YWxSb29tc1NvbGQgPCAxMjpcbiAgICAgICAgYmFyID0gMjtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIHRvdGFsUm9vbXNTb2xkIDwgMTQ6XG4gICAgICAgIGJhciA9IDM7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSB0b3RhbFJvb21zU29sZCA9PT0gMTQ6XG4gICAgICAgIGJhciA9IDQ7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSB0b3RhbFJvb21zU29sZCA9PT0gMTU6XG4gICAgICAgIGJhciA9IDU7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSB0b3RhbFJvb21zU29sZCA+PSAxNjpcbiAgICAgICAgYmFyID0gNjtcbiAgICB9XG5cbiAgICBjb25zdCBzdWl0ZVJhdGUgPSBwcmljZXMyMDIyLnNlYXNvbkFuZEJhcltzZWFzb25dW2Jhcl1bcm9vbVR5cGVdO1xuXG4gICAgY29uc3QgZmluYWxpc2VkRGF0YSA9IHtcbiAgICAgIHNlYXNvbixcbiAgICAgIGJhcixcbiAgICAgIHJvb206IHJvb21UeXBlLFxuICAgICAgZGF0ZSxcbiAgICAgIHJhdGU6IHN1aXRlUmF0ZSxcbiAgICB9O1xuXG4gICAgcmV0dXJuIGZpbmFsaXNlZERhdGE7XG4gIH1cblxuICAvLyBUaGlzIGZ1bmN0aW9uIHRyYW5zbGF0ZXMgY29tcHV0ZXIgc3BlYWsgdG8gaHVtYW4gc3BlYWsgZm9yIHRoZSB0YWJsZS5cbiAgLy8gUmV0dXJucyBhbiBvYmplY3Qgd2l0aCBodW1hbmlzZWQgZGF0YS5cbiAgZnVuY3Rpb24gbWFrZUl0SHVtYW4oc2Vhc29uLCBiYXIsIHJvb20sIGZhcmUsIGRhdGUpIHtcbiAgICAvLyBDcmVhdGUgYW4gb2JqZWN0IHRvIHN0b3JlIHRoZSBkYXRhXG4gICAgbGV0IGRhdGEgPSB7fTtcblxuICAgIC8vVHJhbnNsYXRlIG51bWJlciB0byBzZWFzb24gbmFtZVxuICAgIHN3aXRjaCAodHJ1ZSkge1xuICAgICAgY2FzZSBzZWFzb24gPT09IDA6XG4gICAgICAgIGRhdGEuc2Vhc29uID0gJ0xvdyBTZWFzb24nO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2Ugc2Vhc29uID09PSAxOlxuICAgICAgICBkYXRhLnNlYXNvbiA9ICdNaWRkbGUgU2Vhc29uJztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIHNlYXNvbiA9PT0gMjpcbiAgICAgICAgZGF0YS5zZWFzb24gPSAnTWlkZGxlLWhpZ2ggU2Vhc29uJztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIHNlYXNvbiA9PT0gMzpcbiAgICAgICAgZGF0YS5zZWFzb24gPSAnSGlnaCBTZWFzb24nO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2Ugc2Vhc29uID09PSA0OlxuICAgICAgICBkYXRhLnNlYXNvbiA9ICdQZWFrIFNlYXNvbic7XG4gICAgfVxuXG4gICAgLy9DaGFuZ2UgQkFSIHRvIG1hdGNoIHJlYWwgdmFsdWVcbiAgICBpZiAoYmFyID09PSA2KSBkYXRhLmJhciA9ICdSQUNLJztcbiAgICBlbHNlIGRhdGEuYmFyID0gLShiYXIgLSA2KTtcblxuICAgIC8vVHJhbnNsYXRlIHJvb20gbnVtYmVyIHRvIHJvb20gdHlwZVxuICAgIHN3aXRjaCAodHJ1ZSkge1xuICAgICAgY2FzZSByb29tID09PSAwOlxuICAgICAgICBkYXRhLnJvb20gPSAnTVVTJztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIHJvb20gPT09IDE6XG4gICAgICAgIGRhdGEucm9vbSA9ICdNL1hYJztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIHJvb20gPT09IDI6XG4gICAgICAgIGRhdGEucm9vbSA9ICdKU1QnO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2Ugcm9vbSA9PT0gMzpcbiAgICAgICAgZGF0YS5yb29tID0gJ0pTUSc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSByb29tID09PSA0OlxuICAgICAgICBkYXRhLnJvb20gPSAnU1VJVEUnO1xuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICAvL0Zvcm1hdCB0aGUgcmF0ZSAoY3VycmVudGx5IGltcG9zc2libGUgdG8gZ2V0IHNvbWV0aGluZyB3aXRoIGEgZGVjaW1hbCB2YWx1ZSlcbiAgICBkYXRhLmZhcmUgPSBgJHtmYXJlfS4wMCBFVVJgO1xuXG4gICAgLy9HZXQgdGhlIGRhdGUgaW4gaXRzIHJhdyB2YWx1ZVxuICAgIGRhdGEuZGF0ZSA9IGRhdGU7XG5cbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgbWFrZUl0SHVtYW4sXG4gICAgY2FsY3VsYXRlQ2xhc3NpY3NGYXJlLFxuICAgIGNhbGN1bGF0ZVF1YWRydXBsZUZhcmUsXG4gICAgY2FsY3VsYXRlVHJpcGxlRmFyZSxcbiAgICBjYWxjdWxhdGVTdWl0ZUZhcmUsXG4gIH07XG59KSgpO1xuXG5leHBvcnQgZGVmYXVsdCBiYXJDYWxjdWxhdG9yO1xuIiwiaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5pbXBvcnQgZG9tSGFuZGxlciBmcm9tICcuL2RvbUVsZW1lbnRzJztcbmltcG9ydCBiYXJDYWxjdWxhdG9yIGZyb20gJy4vYmFyJztcblxuY29uc3QgZGlzcGxheVJlc3VsdHMgPSAoZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBkaXNwbGF5RGF0YSgpIHtcbiAgICAvL1JlbW92ZSB0aGUgZXJyb3IgZGl2IGlmIGl0J3MgdGhlcmUuXG4gICAgZG9tSGFuZGxlci5kZWxldGVFcnJvckRpdigpO1xuXG4gICAgLy9DaGVjayBpZiB1c2VyIGZvcmdvdCBpbnB1dCwgaWYgc28sIGFib3J0XG4gICAgbGV0IGVycm9yID0gZG9tSGFuZGxlci5jaGVja0ZvckVycm9ycygpO1xuICAgIGlmIChlcnJvciA9PT0gMSkgcmV0dXJuO1xuXG4gICAgLy8gQ2hlY2sgdG8gc2VlIHdoYXQgcm9vbSBpcyBzZWxlY3RlZFxuICAgIGxldCByb29tID0gZG9tSGFuZGxlci5yZXR1cm5Sb29tVHlwZSgpO1xuXG4gICAgLy9XZSB3aWxsIHN0b3JlIHJhdyBkYXRhIGFib3V0IG9yIHRhYmxlIGVudHJ5IGhlcmVcbiAgICBsZXQgZGF0YTtcblxuICAgIC8vRXhlY3V0ZSBmdW5jdGlvbnMgcmVsZXZhbnQgdG8gZWFjaCByb29tIHR5cGVcbiAgICBzd2l0Y2ggKHRydWUpIHtcbiAgICAgIGNhc2Ugcm9vbSA9PT0gMDpcbiAgICAgICAgZGF0YSA9IGJhckNhbGN1bGF0b3IuY2FsY3VsYXRlQ2xhc3NpY3NGYXJlKDApO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2Ugcm9vbSA9PT0gMTpcbiAgICAgICAgZGF0YSA9IGJhckNhbGN1bGF0b3IuY2FsY3VsYXRlQ2xhc3NpY3NGYXJlKDEpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2Ugcm9vbSA9PT0gMjpcbiAgICAgICAgZGF0YSA9IGJhckNhbGN1bGF0b3IuY2FsY3VsYXRlVHJpcGxlRmFyZSgpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2Ugcm9vbSA9PT0gMzpcbiAgICAgICAgZGF0YSA9IGJhckNhbGN1bGF0b3IuY2FsY3VsYXRlUXVhZHJ1cGxlRmFyZSgpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2Ugcm9vbSA9PT0gNDpcbiAgICAgICAgZGF0YSA9IGJhckNhbGN1bGF0b3IuY2FsY3VsYXRlU3VpdGVGYXJlKCk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIC8vIFRha2UgdGhlIGRhdGEgYW5kIG1ha2UgaXQgcGFsYXRhYmxlXG4gICAgY29uc3QgaHVtYW5pc2VkRGF0YSA9IGJhckNhbGN1bGF0b3IubWFrZUl0SHVtYW4oXG4gICAgICBkYXRhLnNlYXNvbixcbiAgICAgIGRhdGEuYmFyLFxuICAgICAgZGF0YS5yb29tLFxuICAgICAgZGF0YS5yYXRlLFxuICAgICAgZGF0YS5kYXRlXG4gICAgKTtcblxuICAgIC8vUGx1ZyByZWNvcmQgaW50byB0aGUgYm9hcmRcbiAgICBkb21IYW5kbGVyLmNyZWF0ZU5ld1RhYmxlUmVjb3JkKFxuICAgICAgaHVtYW5pc2VkRGF0YS5yb29tLFxuICAgICAgaHVtYW5pc2VkRGF0YS5iYXIsXG4gICAgICBodW1hbmlzZWREYXRhLnNlYXNvbixcbiAgICAgIGh1bWFuaXNlZERhdGEuZmFyZSxcbiAgICAgIGh1bWFuaXNlZERhdGEuZGF0ZVxuICAgICk7XG4gICAgZG9tSGFuZGxlci51cGRhdGVUb3RhbCgnLnByaWNlJywgJyN0b3RhbCcsICcjYXZlcmFnZScpO1xuICAgIGRvbUhhbmRsZXIudXBkYXRlVG90YWwoJy5lYnByaWNlJywgJyNlYnRvdGFsJywgJyNlYmF2ZycpO1xuICAgIGRvbUhhbmRsZXIudXBkYXRlVG90YWwoJy5sbXByaWNlJywgJyNsbXRvdGFsJywgJyNsbWF2ZycpO1xuICB9XG5cbiAgZnVuY3Rpb24gYmluZEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIC8vQnV0dG9uIHRvIGRpc3BsYXkgZGF0YVxuICAgIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNyYXRlY2FsYycpO1xuICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGRpc3BsYXlEYXRhKTtcblxuICAgIC8vQnV0dG9uIHRvIG9yZGVyIGZhcmVzXG4gICAgY29uc3QgYnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2RvcmRlcicpO1xuICAgIGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGRvbUhhbmRsZXIub3JkZXJCeURhdGUpO1xuICB9XG5cbiAgYmluZEV2ZW50TGlzdGVuZXJzKCk7XG59KSgpO1xuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fIiwiVVJMIiwiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwidXJsIiwib3B0aW9ucyIsIlN0cmluZyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidGVzdCIsInNsaWNlIiwiaGFzaCIsIm5lZWRRdW90ZXMiLCJyZXBsYWNlIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibSIsIm4iLCJnZXR0ZXIiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicCIsImIiLCJiYXNlVVJJIiwic2VsZiIsImhyZWYiLCJ1cGRhdGVUb3RhbCIsInByaWNlY2VsbHMiLCJ0b3RhbGNlbGwiLCJhdmdjZWxsIiwicHJpY2VDZWxscyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJ0b3RhbENlbGwiLCJhdmVyYWdlQ2VsbCIsInRleHRDb250ZW50IiwiZm9yRWFjaCIsImNlbGwiLCJmYXJlIiwiTnVtYmVyIiwic3BsaXQiLCJ0b3RhbCIsInRvRml4ZWQiLCJhdmVyYWdlIiwiY3JlYXRlRXJyb3JEaXYiLCJtZXNzYWdlIiwiZXJyb3JEaXYiLCJjbGFzc0xpc3QiLCJhZGQiLCJtYWluIiwidGFibGUiLCJpbnNlcnRCZWZvcmUiLCJyZXR1cm5EYXRlIiwidmFsdWUiLCJyZXR1cm5Sb29tc1NvbGQiLCJyb29tVHlwZSIsInJvb21Qb3BDb250YWluZXIiLCJyZXR1cm5Sb29tVHlwZSIsInJhZGlvRm9ybSIsImdldEVsZW1lbnRCeUlkIiwibXVzQnV0dG9uIiwibUJ1dHRvbiIsImpzdEJ1dHRvbiIsImpzcUJ1dHRvbiIsInN1aXRlQnV0dG9uIiwiY2hlY2tlZCIsImNyZWF0ZU5ld1RhYmxlUmVjb3JkIiwidHlwZWRhdGEiLCJiYXJkYXRhIiwic2Vhc29uZGF0YSIsInByaWNlZGF0YSIsImRhdGFEYXRhIiwibmV3Um93IiwiaW5zZXJ0Um93IiwiZGVsZXRlQ2VsbCIsImluc2VydENlbGwiLCJ4SWNvbiIsIkltYWdlIiwieCIsImFkZEV2ZW50TGlzdGVuZXIiLCJwcmljZSIsInJvdyIsIm51bWJlclByaWNlIiwiRWFybHlCb29raW5nRGlzY291bnQiLCJMYXN0TWludXRlRGlzY291bnQiLCJjZWxscyIsIkVhcmx5Qm9va2luZ1ByaWNlIiwiTGFzdE1pbnV0ZVByaWNlIiwiRWFybHlCb29raW5nIiwibGFzdE1pbnV0ZSIsImFkZExhc3RNaW51dGVBbmRFYXJseUJvb2tpbmciLCJjaGVja0ZvckVycm9ycyIsImRhdGVXaWRnZXQiLCJyb29tc0lucHV0IiwidHJpcGxlUm9vbXNJbnB1dCIsInF1YWRydXBsZVJvb21zSW5wdXQiLCJOYU4iLCJpc05hTiIsIkF1ZGlvIiwiZmVkZXJpY28iLCJwbGF5IiwiZGVsZXRlRXJyb3JEaXYiLCJvcmRlckJ5RGF0ZSIsInRib2R5Iiwicm93cyIsIkFycmF5IiwiZnJvbSIsInNvcnRlZFJvd3MiLCJzb3J0IiwiRGF0ZSIsIm5vZGUiLCJkYXRlIiwic2Vhc29uIiwic2Vhc29uQW5kQmFyIiwiYmFyQ2FsY3VsYXRvciIsImNhbGN1bGF0ZUNsYXNzaWNzRmFyZSIsInR5cGUiLCJub09mQ2xhc3NpY1NvbGQiLCJiYXIiLCJyb29tIiwicmF0ZSIsImNhbGN1bGF0ZVRyaXBsZUZhcmUiLCJub09mVHJpcGxlc1NvbGQiLCJ0cmlwbGVSYXRlIiwiZG91YmxlUmF0ZSIsIm1ha2VJdEh1bWFuIiwiY2FsY3VsYXRlUXVhZHJ1cGxlRmFyZSIsIm5vT2ZRdWFkcnVwbGVTb2xkIiwicXVhZHJ1cGxlUmF0ZSIsImNhbGN1bGF0ZVN1aXRlRmFyZSIsInRvdGFsUm9vbXNTb2xkIiwiaHVtYW5pc2VkRGF0YSJdLCJzb3VyY2VSb290IjoiIn0=